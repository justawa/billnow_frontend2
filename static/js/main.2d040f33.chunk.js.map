{"version":3,"sources":["actions/types.js","reducers/cartReducer.js","reducers/saleReducer.js","reducers/purchaseReducer.js","reducers/authReducer.js","reducers/index.js","reducers/customerReducer.js","reducers/partyReducer.js","reducers/urlReducer.js","api/billing.js","actions/index.js","components/Header.js","components/Footer.js","components/Layouts/FullLayout.js","components/Authentication/Login.js","components/Authentication/Logout.js","components/Layouts/SidebarLayout.js","components/Sidebar.js","components/Search.js","components/AddCustomer.js","components/SearchItem.js","helpers/requireAuth.js","components/Invoice/CreateInvoice.js","components/AddParty.js","components/Item/AddItemModal.js","components/Bill/CreateBill.js","components/Invoice/InvoicePdf.js","components/Reports/DailyPurchase.js","components/Reports/DailySale.js","components/Reports/SaleProfit.js","components/Customer/CustomerList.js","components/Customer/EditCustomer.js","components/Reports/Expense.js","components/Reports/StockSummary.js","components/Reports/CustomerInvoices.js","components/Reports/MostSoldItems.js","components/Reports/CancelledInvoice.js","components/Bill/BillPdf.js","components/Reports/ItemGST.js","components/Item/AddItem.js","components/Item/EditItem.js","components/Item/ItemList.js","components/App.js","index.js","components/Invoice/InvoicePdf.module.css"],"names":["AUTH_LOGIN","AUTH_ERROR","AUTH_LOGOUT","UPDATE_URL","ADD_TO_CART","UPDATE_CART","UPDATE_CART_ITEM","SEARCH_CUSTOMER","SELECT_CUSTOMER","SEARCH_PARTY","SELECT_PARTY","UPDATE_CART_MODE_OF_PAYMENT","UPDATE_CART_TOTAL_AMOUNT","UPDATE_CART_AMOUNT_REPAY","UPDATE_CART_AMOUNT_PAID","UPDATE_CART_DISCOUNT","SHOW_INVOICE","CLEAR_CART","CLEAR_CUSTOMER","SHOW_BILL","INITIAL_STATE","items","payment_mode","total_amount","item_amount","item_gst","amount_repay","amount_paid","discount","customer","party","authenticated","user","permisson","isLoggedIn","error","combineReducers","cart","state","action","type","itemCost","Number","payload","sale_price","qty","toFixed","price","newState","itemTotal","reduce","total","item","parseFloat","sale","purchase","auth","permission","redirectURL","axios","create","baseURL","permissions","all","name","redirectTo","reports","dataEntrySale","dataEntryPurchase","other","users","email","password","updateURL","url","searchPartyByPhone","phone","openModal","dispatch","a","billing","post","response","data","searched_party","console","log","updateParty","id","closeModal","address","city","pincode","put","billing_address","billing_city","billing_state","billing_pincode","selected_party","selectParty","Header","this","props","Navbar","color","light","expand","NavbarBrand","to","NavbarToggler","Collapse","navbar","Nav","className","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","tag","Link","size","divider","React","Component","connect","Footer","useState","stocks","setStock","useEffect","get","cb","map","stock","style","marginRight","product_name","fontWeight","rem_qty","SidebarLayout","getComponent","key","children","filter","component","Login","isFormloading","handleChange","e","setState","target","value","handleSubmit","preventDefault","hasErrors","loginUser","history","push","parsed","queryString","parse","location","search","Spinner","Form","onSubmit","FormGroup","Label","for","Input","placeholder","onChange","Button","fontSize","errorMessage","callback","formLoading","foundUser","find","Logout","logoutUser","Sidebar","latestSales","length","ListGroup","ListGroupItem","Search","intialValue","suggestions","event","newValue","onSuggestionsFetchRequested","getSuggestions","onSuggestionsClearRequested","customers","getSuggestionValue","suggestion","renderSuggestion","inputProps","AddCustomer","isOpen","phoneError","card","toggleModal","prevState","handlePhoneChange","addNewCustomer","searchCustomerByPhone","handleInputChange","handleFormSubmit","updateCustomer","renderForm","Row","form","Col","md","readOnly","onClick","selectCustomer","display","block","Modal","toggle","backdrop","ModalHeader","ModalBody","searched_customer","selected_customer","SearchItem","handleKeyDown","customerType","product_code","searchProduct","currentItem","addToCart","q","searched_items","escapedValue","trim","replace","regex","RegExp","test","autoFocus","onKeyDown","updatedItem","created_at","updated_at","requireAuth","ChildComponent","ComposedComponent","shouldNavigateAway","currentURL","ownProps","pathname","CreateInvoice","message","headMessage","bodyMessage","messageColor","componentDidMount","removeFromCart","filteredItems","updateCart","updateQty","idx","getItemFromIdAndCalculatePrice","updatedItems","updateCartItem","renderTableBody","aria-hidden","mrp","gst","min","colSpan","calculatedGst","calculated_gst","handleInvoiceSubmit","createInvoice","justifyContent","maxHeight","overflowX","overflowY","Table","bordered","striped","updateCartModeOfPayment","selected","InputGroup","InputGroupAddon","addonType","InputGroupText","updateCartTotalAmount","updateCartAmountPaid","updateCartAmountRepay","disabled","class","modeOfPayment","totalAmount","amountRepay","amountPaid","updateCartDiscount","redirect","JSON","stringify","customer_id","clearCart","AddParty","addNewParty","maxLength","file","hsn","image","brand","wholesale_percent","retail_percent","loading","files","formData","FormData","append","headers","fullscreen","EXCLUSIVE_OF_TAX","INCLUSIVE_OF_TAX","CreateBill","tableData","uuidv4","ws_margin","r_margin","unit_cost","final_unit_cost","unit_cost_with_gst","whole_sale_price","sale_price_to_mrp","whole_sale_price_to_mrp","expiry","Date","setFullYear","getFullYear","toISOString","slice","mfg","total_cost","tax_type","addItem","setAddItem","deleteRow","addRow","filteredData","handleInput","formInputs","setTaxType","setSalePriceForAllItems","calculateTotalCost","updatedData","calculateSalePrice","calculateWholeSalePrice","calculateSaleProfitPercent","calculateWholeSaleProfitPercent","sale_price_before_gst","actual_unit_cost","whole_sale_price_before_gst","calculateFinalUnitCost","final_cost","handlePayment","handleBillSubmit","createBill","searchFixItem","productCode","Promise","resolve","reject","i","full_image_path","checked","row","src","alt","width","tabIndex","Math","abs","AddItemModal","successMessage","failMessage","party_id","InvoicePdf","showDateFromTimeStamp","dateTime","showInvoice","match","params","textAlign","textTransform","pivot","DailyPurchase","purchases","fromDate","toDate","isLoading","onAlertDismiss","from","handleCancelBill","updatedPurchases","hidden","Alert","DailySale","sales","handleCancelInvoice","updatedSales","profit","CustomerList","paid_total","credit_total","EditCustomer","Expense","expenses","amount","date","description","isEditing","editingId","handleCancelExpense","updatedExpenses","expense","handleEditClick","foundExpense","CustomerInvoices","updatedCustomer","updatePaymentMode","marginBottom","MostSoldItems","setItem","setIsLoading","setFromDate","setToDate","itemsWithCount","count","BillPdf","showBill","gstPercent","handleGstChange","isProfitOrLoss","purchase_price","unit_cost_without_gst","gst_amount_from_unit_cost","sold_qty","sale_price_without_gst","gst_amount_from_sale_price","AddItem","EditItem","fetchItem","ItemList","App","exact","path","SaleProfit","StockSummary","CancelledInvoice","ItemGST","store","createStore","RootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2d040f33.chunk.js","sourcesContent":["export const AUTH_LOGIN = \"AUTH_LOGIN\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\nexport const UPDATE_URL = \"UPDATE_URL\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const UPDATE_CART = \"UPDATE_CART\";\r\nexport const UPDATE_CART_ITEM = \"UPDATE_CART_ITEM\";\r\nexport const SEARCH_CUSTOMER = \"SEARCH_CUSTOMER\";\r\nexport const SELECT_CUSTOMER = \"SELECT_CUSTOMER\";\r\nexport const SEARCH_PARTY = \"SEARCH_PARTY\";\r\nexport const SELECT_PARTY = \"SELECT_PARTY\";\r\nexport const UPDATE_CART_MODE_OF_PAYMENT = \"UPDATE_CART_MODE_OF_PAYMENT\";\r\nexport const UPDATE_CART_TOTAL_AMOUNT = \"UPDATE_CART_TOTAL_AMOUNT\";\r\nexport const UPDATE_CART_AMOUNT_REPAY = \"UPDATE_CART_AMOUNT_REPAY\";\r\nexport const UPDATE_CART_AMOUNT_PAID = \"UPDATE_CART_AMOUNT_PAID\";\r\nexport const UPDATE_CART_DISCOUNT = \"UPDATE_CART_DISCOUNT\";\r\nexport const SHOW_INVOICE = \"SHOW_INVOICE\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const CLEAR_CUSTOMER = \"CLEAR_CUSTOMER\";\r\nexport const SHOW_BILL = \"SHOW_BILL\";\r\n","import {\r\n  ADD_TO_CART,\r\n  UPDATE_CART,\r\n  UPDATE_CART_ITEM,\r\n  UPDATE_CART_MODE_OF_PAYMENT,\r\n  UPDATE_CART_TOTAL_AMOUNT,\r\n  UPDATE_CART_AMOUNT_REPAY,\r\n  UPDATE_CART_AMOUNT_PAID,\r\n  UPDATE_CART_DISCOUNT,\r\n  CLEAR_CART,\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  items: [],\r\n  payment_mode: 'cash',\r\n  total_amount: 0,\r\n  item_amount: 0,\r\n  item_gst: 0,\r\n  amount_repay: 0,\r\n  amount_paid: 0,\r\n  discount: 0,\r\n};\r\n\r\nexport default function cartReducer(state = INITIAL_STATE, action) {\r\n  if (action.type === ADD_TO_CART) {\r\n    const itemCost = Number(\r\n      action.payload.sale_price * action.payload.qty\r\n    ).toFixed(2);\r\n    action.payload.price = itemCost;\r\n    const newState = { ...state, items: [action.payload, ...state.items] };\r\n    let itemTotal = newState.items.reduce(\r\n      (total, item) =>\r\n        Number(parseFloat(total) + parseFloat(item.price)).toFixed(2),\r\n      0\r\n    );\r\n    itemTotal -= newState.discount;\r\n    return {\r\n      ...newState,\r\n      total_amount: itemTotal,\r\n      amount_repay: itemTotal,\r\n    };\r\n  }\r\n\r\n  if (action.type === UPDATE_CART) {\r\n    const newState = { ...state, items: action.payload };\r\n    let itemTotal = newState.items.reduce(\r\n      (total, item) =>\r\n        Number(parseFloat(total) + parseFloat(item.price)).toFixed(2),\r\n      0\r\n    );\r\n    // const totalItemPrice = newState.items.reduce((total, item) => {\r\n    //   return Number(total + item.price).toFixed(2);\r\n    // }, 0);\r\n    // const totalItemGst = newState.items.reduce((total, item) => {\r\n    //   let { calculated_gst, qty } = item;\r\n    //   calculated_gst = calculated_gst || 0;\r\n    //   return Number(total + calculated_gst * qty).toFixed(2);\r\n    // }, 0);\r\n    itemTotal -= newState.discount;\r\n    return {\r\n      ...newState,\r\n      total_amount: itemTotal,\r\n      amount_repay: itemTotal,\r\n    };\r\n  }\r\n\r\n  if (action.type === UPDATE_CART_ITEM) {\r\n    // const filteredItems = state.items.filter(\r\n    //   (item) => item.id !== action.payload.id\r\n    // );\r\n    const newState = { ...state, items: action.payload };\r\n    let itemTotal = newState.items.reduce(\r\n      (total, item) =>\r\n        Number(parseFloat(total) + parseFloat(item.price)).toFixed(2),\r\n      0\r\n    );\r\n    // const totalItemPrice = newState.items.reduce((total, item) => {\r\n    //   return Number(total + item.price).toFixed(2);\r\n    // }, 0);\r\n    // const totalItemGst = newState.items.reduce((total, item) => {\r\n    //   let { qty } = item;\r\n    //   return Number(total * qty).toFixed(2);\r\n    // }, 0);\r\n    itemTotal -= newState.discount;\r\n    return {\r\n      ...newState,\r\n      total_amount: itemTotal,\r\n      amount_repay: itemTotal,\r\n    };\r\n  }\r\n\r\n  if (action.type === UPDATE_CART_MODE_OF_PAYMENT) {\r\n    return { ...state, payment_mode: action.payload };\r\n  }\r\n\r\n  if (action.type === UPDATE_CART_TOTAL_AMOUNT) {\r\n    return { ...state, total_amount: action.payload };\r\n  }\r\n\r\n  if (action.type === UPDATE_CART_AMOUNT_REPAY) {\r\n    return { ...state, amount_repay: action.payload };\r\n  }\r\n\r\n  if (action.type === UPDATE_CART_AMOUNT_PAID) {\r\n    const amount_paid = action.payload || 0;\r\n    const amount_repay = Number(\r\n      parseFloat(state.total_amount) - parseFloat(amount_paid)\r\n    ).toFixed(2);\r\n    return {\r\n      ...state,\r\n      amount_paid: action.payload,\r\n      amount_repay: amount_repay,\r\n    };\r\n  }\r\n\r\n  if (action.type === UPDATE_CART_DISCOUNT) {\r\n    const newState = { ...state, discount: action.payload };\r\n    let itemTotal = newState.items.reduce(\r\n      (total, item) =>\r\n        Number(parseFloat(total) + parseFloat(item.price)).toFixed(2),\r\n      0\r\n    );\r\n    itemTotal -= newState.discount;\r\n    return {\r\n      ...newState,\r\n      total_amount: itemTotal,\r\n      amount_repay: itemTotal,\r\n    };\r\n  }\r\n\r\n  if (action.type === CLEAR_CART) {\r\n    return { ...INITIAL_STATE };\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { SHOW_INVOICE } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  customer: {},\r\n  items: [],\r\n};\r\n\r\nexport default function saleReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case SHOW_INVOICE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SHOW_BILL } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  party: {},\r\n  items: [],\r\n};\r\n\r\nexport default function purchaseReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case SHOW_BILL:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { AUTH_ERROR, AUTH_LOGIN, AUTH_LOGOUT } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  authenticated: { user: \"\", permisson: \"\", isLoggedIn: false },\r\n  error: \"\",\r\n};\r\n\r\nexport default function authReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case AUTH_LOGIN:\r\n      return {\r\n        ...state,\r\n        authenticated: {\r\n          user: action.payload,\r\n          permission: action.payload.permission,\r\n          isLoggedIn: true,\r\n        },\r\n      };\r\n    // case AUTH_LOGIN_REPORTS:\r\n    //   return {\r\n    //     ...state,\r\n    //     authenticated: {\r\n    //       ...state.authenticated,\r\n    //       reports: action.payload,\r\n    //     },\r\n    //   };\r\n    case AUTH_ERROR:\r\n      return { ...state, error: action.payload };\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        authenticated: { user: \"\", permisson: \"\", isLoggedIn: false },\r\n        error: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport customerReducer from \"./customerReducer\";\r\nimport partyReducer from \"./partyReducer\";\r\nimport saleReducer from \"./saleReducer\";\r\nimport purchaseReducer from \"./purchaseReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport urlReducer from \"./urlReducer\";\r\n\r\nexport default combineReducers({\r\n  cart: cartReducer,\r\n  customer: customerReducer,\r\n  party: partyReducer,\r\n  sale: saleReducer,\r\n  purchase: purchaseReducer,\r\n  auth: authReducer,\r\n  redirectURL: urlReducer,\r\n});\r\n","import {\r\n  SEARCH_CUSTOMER,\r\n  SELECT_CUSTOMER,\r\n  CLEAR_CUSTOMER,\r\n} from \"../actions/types\";\r\n\r\nexport default function customerReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SEARCH_CUSTOMER:\r\n      return action.payload;\r\n    case SELECT_CUSTOMER:\r\n      return action.payload;\r\n    case CLEAR_CUSTOMER:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SEARCH_PARTY, SELECT_PARTY } from \"../actions/types\";\r\n\r\nexport default function partyReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SEARCH_PARTY:\r\n      return action.payload;\r\n    case SELECT_PARTY:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { UPDATE_URL } from \"../actions/types\";\r\n\r\nexport default function saleReducer(state = \"/\", action) {\r\n  switch (action.type) {\r\n    case UPDATE_URL:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst isLive = true;\r\n\r\nconst url = isLive\r\n  ? 'https://findnearby.biz/asc_billing_2/api/'\r\n  : 'http://127.0.0.1:8000/api/';\r\n\r\nexport default axios.create({\r\n  baseURL: url,\r\n});\r\n","import {\r\n  AUTH_LOGIN,\r\n  AUTH_ERROR,\r\n  AUTH_LOGOUT,\r\n  UPDATE_URL,\r\n  ADD_TO_CART,\r\n  UPDATE_CART,\r\n  UPDATE_CART_ITEM,\r\n  UPDATE_CART_MODE_OF_PAYMENT,\r\n  UPDATE_CART_TOTAL_AMOUNT,\r\n  UPDATE_CART_AMOUNT_REPAY,\r\n  UPDATE_CART_AMOUNT_PAID,\r\n  UPDATE_CART_DISCOUNT,\r\n  CLEAR_CART,\r\n  SEARCH_CUSTOMER,\r\n  SELECT_CUSTOMER,\r\n  CLEAR_CUSTOMER,\r\n  SEARCH_PARTY,\r\n  SELECT_PARTY,\r\n  SHOW_INVOICE,\r\n  SHOW_BILL,\r\n} from './types';\r\nimport billing from '../api/billing';\r\n\r\n// const EMAIL = { initial: \"nishant@admin.com\", reports: \"reports@admin.com\" };\r\n// const PASSWORD = { initial: \"12345678\", reports: \"12345678\" };\r\n\r\nconst permissions = {\r\n  all: {\r\n    name: 'all',\r\n    redirectTo: '/',\r\n  },\r\n  reports: {\r\n    name: 'reports',\r\n    redirectTo: '/daily-sale-report',\r\n  },\r\n  dataEntrySale: {\r\n    name: 'data-entry-sale',\r\n    redirectTo: '/',\r\n  },\r\n  dataEntryPurchase: {\r\n    name: 'data-entry-purchase',\r\n    redirectTo: '/bill',\r\n  },\r\n  other: {\r\n    name: 'other',\r\n    redirectTo: '/',\r\n  },\r\n};\r\n\r\nconst users = [\r\n  {\r\n    email: 'all@admin.com',\r\n    password: '12345678',\r\n    permission: permissions.all,\r\n  },\r\n  {\r\n    email: 'reports@admin.com',\r\n    password: '12345678',\r\n    permission: permissions.reports,\r\n  },\r\n  {\r\n    email: 'dataentrysale@admin.com',\r\n    password: '12345678',\r\n    permission: permissions.dataEntrySale,\r\n  },\r\n  {\r\n    email: 'dataentrypurchase@admin.com',\r\n    password: '12345678',\r\n    permission: permissions.dataEntryPurchase,\r\n  },\r\n  {\r\n    email: 'other@admin.com',\r\n    password: '12345678',\r\n    permission: permissions.other,\r\n  },\r\n];\r\n\r\nexport const loginUser = (email, password, callback, formLoading) => {\r\n  // if (EMAIL[type] === email && PASSWORD[type] === password) {\r\n  //   localStorage.setItem(\"token\", \"ufkkhidfdsfkldjkrhghkvkcdfs\");\r\n  //   callback();\r\n  //   if (type === \"initial\") {\r\n  //     return { type: AUTH_LOGIN_INTIAL, payload: true };\r\n  //   } else {\r\n  //     return { type: AUTH_LOGIN_REPORTS, payload: true };\r\n  //   }\r\n  // } else {\r\n  //   formLoading();\r\n  //   return { type: AUTH_ERROR, payload: \"Invalid Email or Password\" };\r\n  // }\r\n\r\n  const foundUser = users.find(\r\n    (user) => user.email === email && user.password === password\r\n  );\r\n  if (foundUser) {\r\n    callback(foundUser.permission.redirectTo);\r\n    return { type: AUTH_LOGIN, payload: foundUser };\r\n  } else {\r\n    formLoading();\r\n    return { type: AUTH_ERROR, payload: 'Invalid Email or Password' };\r\n  }\r\n};\r\n\r\nexport const logoutUser = (callback) => async (dispatch) => {\r\n  dispatch({ type: AUTH_LOGOUT, payload: '' });\r\n  callback();\r\n};\r\n\r\nexport const updateURL = (url) => {\r\n  return { type: UPDATE_URL, payload: url };\r\n};\r\n\r\nexport const addToCart = (item) => {\r\n  const updatedItem = { ...item, discount: 0, price: 0, qty: 1 };\r\n  delete updatedItem.created_at;\r\n  delete updatedItem.updated_at;\r\n\r\n  return { type: ADD_TO_CART, payload: updatedItem };\r\n};\r\n\r\nexport const updateCart = (items) => {\r\n  return { type: UPDATE_CART, payload: items };\r\n};\r\n\r\nexport const updateCartItem = (items) => {\r\n  return { type: UPDATE_CART_ITEM, payload: items };\r\n};\r\n\r\nexport const updateCartModeOfPayment = (modeOfPayment) => {\r\n  return { type: UPDATE_CART_MODE_OF_PAYMENT, payload: modeOfPayment };\r\n};\r\n\r\nexport const updateCartTotalAmount = (totalAmount) => {\r\n  return { type: UPDATE_CART_TOTAL_AMOUNT, payload: totalAmount };\r\n};\r\n\r\nexport const updateCartAmountRepay = (amountRepay) => {\r\n  return { type: UPDATE_CART_AMOUNT_REPAY, payload: amountRepay };\r\n};\r\n\r\nexport const updateCartAmountPaid = (amountPaid) => {\r\n  return { type: UPDATE_CART_AMOUNT_PAID, payload: amountPaid };\r\n};\r\n\r\nexport const updateCartDiscount = (discount) => {\r\n  return { type: UPDATE_CART_DISCOUNT, payload: discount };\r\n};\r\n\r\nexport const searchCustomerByPhone = (phone, openModal) => async (dispatch) => {\r\n  try {\r\n    const response = await billing.post('search-customer', {\r\n      phone,\r\n    });\r\n    dispatch({\r\n      type: SEARCH_CUSTOMER,\r\n      payload: response.data.searched_customer,\r\n    });\r\n    openModal();\r\n    // cb();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const updateCustomer = (\r\n  id,\r\n  { name, address, city, state, pincode, card },\r\n  closeModal\r\n) => async (dispatch) => {\r\n  try {\r\n    const response = await billing.put(`update-customer/${id}`, {\r\n      name,\r\n      billing_address: address,\r\n      billing_city: city,\r\n      billing_state: state,\r\n      billing_pincode: pincode,\r\n      card: card,\r\n    });\r\n    dispatch({\r\n      type: SELECT_CUSTOMER,\r\n      payload: response.data.selected_customer,\r\n    });\r\n    closeModal();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const selectCustomer = (customer, closeModal) => {\r\n  closeModal();\r\n  return { type: SEARCH_CUSTOMER, payload: customer };\r\n};\r\n\r\nexport const searchPartyByPhone = (phone, openModal) => async (dispatch) => {\r\n  try {\r\n    const response = await billing.post('search-party', {\r\n      phone,\r\n    });\r\n    dispatch({\r\n      type: SEARCH_PARTY,\r\n      payload: response.data.searched_party,\r\n    });\r\n    openModal();\r\n    // cb();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const updateParty = (\r\n  id,\r\n  { name, address, city, state, pincode },\r\n  closeModal\r\n) => async (dispatch) => {\r\n  try {\r\n    const response = await billing.put(`update-party/${id}`, {\r\n      name,\r\n      billing_address: address,\r\n      billing_city: city,\r\n      billing_state: state,\r\n      billing_pincode: pincode,\r\n    });\r\n    dispatch({\r\n      type: SELECT_PARTY,\r\n      payload: response.data.selected_party,\r\n    });\r\n    closeModal();\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const selectParty = (party, closeModal) => {\r\n  closeModal();\r\n  return { type: SEARCH_PARTY, payload: party };\r\n};\r\n\r\nexport const createBill = (data, party, successMessage, failMessage) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const {\r\n      tableData,\r\n      payment_mode,\r\n      total_amount,\r\n      amount_repay,\r\n      amount_paid,\r\n      discount,\r\n      tax_type,\r\n    } = data;\r\n\r\n    const response = await billing.post('create-bill', {\r\n      items: JSON.stringify(tableData),\r\n      payment_mode: payment_mode,\r\n      total_amount: total_amount,\r\n      amount_repay: amount_repay,\r\n      amount_paid: amount_paid,\r\n      discount: discount,\r\n      party_id: party.id,\r\n      tax_type: tax_type,\r\n    });\r\n\r\n    console.log(response.data);\r\n    successMessage({\r\n      headMessage: 'Success',\r\n      bodyMessage: ['Purchase created successfully'],\r\n      messageColor: 'green',\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    failMessage({\r\n      headMessage: 'Failure',\r\n      bodyMessage: ['Failed to create purchase. Please try again'],\r\n      messageColor: 'red',\r\n    });\r\n  }\r\n};\r\n\r\nexport const createInvoice = (data, customer, redirect) => async (dispatch) => {\r\n  try {\r\n    const {\r\n      items,\r\n      payment_mode,\r\n      total_amount,\r\n      amount_repay,\r\n      amount_paid,\r\n      discount,\r\n    } = data;\r\n\r\n    const response = await billing.post('create-invoice', {\r\n      items: JSON.stringify(items),\r\n      payment_mode: payment_mode,\r\n      total_amount: total_amount,\r\n      amount_repay: amount_repay,\r\n      amount_paid: amount_paid,\r\n      discount: discount,\r\n      customer_id: customer.id,\r\n    });\r\n    dispatch({ type: CLEAR_CART, payload: '' });\r\n    dispatch({ type: CLEAR_CUSTOMER });\r\n    return redirect(response.data.sale.id);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const clearCart = () => {\r\n  return { type: CLEAR_CART, payload: '' };\r\n};\r\n\r\nexport const showInvoice = (id) => async (dispatch) => {\r\n  try {\r\n    const response = await billing.get(`invoice/${id}`);\r\n    dispatch({ type: SHOW_INVOICE, payload: response.data.sale });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const showBill = (id) => async (dispatch) => {\r\n  try {\r\n    const response = await billing.get(`bill/${id}`);\r\n    dispatch({ type: SHOW_BILL, payload: response.data.purchase });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    const { auth } = this.props;\r\n    return (\r\n      <Navbar color='faded' light expand='md'>\r\n        <NavbarBrand\r\n          to={auth.permission ? auth.permission.redirectTo : '/login'}\r\n        >\r\n          ASC Billing\r\n        </NavbarBrand>\r\n        {auth.isLoggedIn && (\r\n          <>\r\n            <NavbarToggler />\r\n            <Collapse navbar>\r\n              <Nav className='ml-auto' navbar>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                  <DropdownToggle nav caret>\r\n                    Admin\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    {auth.permission &&\r\n                      (auth.permission.name === 'all' ||\r\n                        auth.permission.name === 'reports') && (\r\n                        <DropdownItem\r\n                          tag={Link}\r\n                          to='/daily-sale-report'\r\n                          color='warning'\r\n                          className='text-uppercase m-1'\r\n                          size='sm'\r\n                        >\r\n                          Daily Sale\r\n                        </DropdownItem>\r\n                      )}\r\n                    {auth.permission &&\r\n                      (auth.permission.name === 'all' ||\r\n                        auth.permission.name === 'data-entry-sale' ||\r\n                        auth.permission.name === 'other') && (\r\n                        <DropdownItem\r\n                          tag={Link}\r\n                          to='/'\r\n                          color='warning'\r\n                          className='text-uppercase m-1'\r\n                          size='sm'\r\n                        >\r\n                          Invoice\r\n                        </DropdownItem>\r\n                      )}\r\n                    {auth.permission && auth.permission.name === 'all' && (\r\n                      <DropdownItem\r\n                        tag={Link}\r\n                        to='/sale-profit'\r\n                        color='warning'\r\n                        className='text-uppercase m-1'\r\n                        size='sm'\r\n                      >\r\n                        Sale Profit\r\n                      </DropdownItem>\r\n                    )}\r\n                    {auth.permission &&\r\n                      (auth.permission.name === 'all' ||\r\n                        auth.permission.name === 'reports') && (\r\n                        <DropdownItem\r\n                          tag={Link}\r\n                          to='/stock-summary'\r\n                          color='warning'\r\n                          className='text-uppercase m-1'\r\n                          size='sm'\r\n                        >\r\n                          Stock Summary\r\n                        </DropdownItem>\r\n                      )}\r\n                    {auth.permission &&\r\n                      (auth.permission.name === 'all' ||\r\n                        auth.permission.name === 'reports' ||\r\n                        auth.permission.name === 'other') && (\r\n                        <DropdownItem\r\n                          tag={Link}\r\n                          to='/expense'\r\n                          color='warning'\r\n                          className='text-uppercase m-1'\r\n                          size='sm'\r\n                        >\r\n                          Expense\r\n                        </DropdownItem>\r\n                      )}\r\n                    {auth.permission &&\r\n                      (auth.permission.name === 'all' ||\r\n                        auth.permission.name === 'reports') && (\r\n                        <DropdownItem\r\n                          tag={Link}\r\n                          to='/daily-purchase-report'\r\n                          color='warning'\r\n                          className='text-uppercase m-1'\r\n                          size='sm'\r\n                        >\r\n                          Daily Purchase\r\n                        </DropdownItem>\r\n                      )}\r\n                    {auth.permission &&\r\n                      (auth.permission.name === 'all' ||\r\n                        auth.permission.name === 'other') && (\r\n                        <DropdownItem\r\n                          tag={Link}\r\n                          to='/customers'\r\n                          color='warning'\r\n                          className='text-uppercase m-1'\r\n                          size='sm'\r\n                        >\r\n                          Customers\r\n                        </DropdownItem>\r\n                      )}\r\n                    {auth.permission &&\r\n                      (auth.permission.name === 'all' ||\r\n                        auth.permission.name === 'data-entry-purchase') && (\r\n                        <DropdownItem\r\n                          tag={Link}\r\n                          to='/bill'\r\n                          color='warning'\r\n                          className='text-uppercase m-1'\r\n                          size='sm'\r\n                        >\r\n                          Bill\r\n                        </DropdownItem>\r\n                      )}\r\n                    {auth.permission && auth.permission.name === 'all' && (\r\n                      <DropdownItem\r\n                        tag={Link}\r\n                        to='/most-sold-items'\r\n                        color='warning'\r\n                        className='text-uppercase m-1'\r\n                        size='sm'\r\n                      >\r\n                        Most Sold Items\r\n                      </DropdownItem>\r\n                    )}\r\n                    {auth.permission && auth.permission.name === 'all' && (\r\n                      <DropdownItem\r\n                        tag={Link}\r\n                        to='/cancelled-invoice'\r\n                        color='warning'\r\n                        className='text-uppercase m-1'\r\n                        size='sm'\r\n                      >\r\n                        Cancelled Invoice\r\n                      </DropdownItem>\r\n                    )}\r\n                    {auth.permission &&\r\n                      (auth.permission.name === 'all' ||\r\n                        auth.permission.name === 'reports') && (\r\n                        <DropdownItem\r\n                          tag={Link}\r\n                          to='/item-gst'\r\n                          color='warning'\r\n                          className='text-uppercase m-1'\r\n                          size='sm'\r\n                        >\r\n                          Item GST\r\n                        </DropdownItem>\r\n                      )}\r\n                    {auth.permission && auth.permission.name === 'all' && (\r\n                      <DropdownItem\r\n                        tag={Link}\r\n                        to='/add-item'\r\n                        color='warning'\r\n                        className='text-uppercase m-1'\r\n                        size='sm'\r\n                      >\r\n                        Add Item\r\n                      </DropdownItem>\r\n                    )}\r\n                    {auth.permission && auth.permission.name === 'all' && (\r\n                      <DropdownItem\r\n                        tag={Link}\r\n                        to='/items'\r\n                        color='warning'\r\n                        className='text-uppercase m-1'\r\n                        size='sm'\r\n                      >\r\n                        All Items\r\n                      </DropdownItem>\r\n                    )}\r\n                    <DropdownItem divider />\r\n                    <DropdownItem tag={Link} to='/logout'>\r\n                      Logout\r\n                    </DropdownItem>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </Nav>\r\n            </Collapse>\r\n          </>\r\n        )}\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { auth: state.auth.authenticated };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n\r\n{\r\n  /* <nav className=\"navbar navbar-expand-md navbar-light\">\r\n  <div className=\"container\">\r\n    <Link\r\n      className=\"navbar-brand\"\r\n      to={auth.permission ? auth.permission.redirectTo : \"/login\"}\r\n    >\r\n      ASC Billing\r\n    </Link>\r\n  </div>\r\n</nav>; */\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport billing from \"../api/billing\";\r\n\r\nexport default function Footer() {\r\n  const [stocks, setStock] = useState([]);\r\n  useEffect(() => {\r\n    async function cb() {\r\n      const response = await billing.get(\"stock-less-than-ten\");\r\n      setStock(response.data.items);\r\n    }\r\n    cb();\r\n  }, []);\r\n\r\n  return (\r\n    <marquee>\r\n      {stocks.map((stock) => (\r\n        <span style={{ marginRight: 10 }}>\r\n          {stock.product_name} -{\" \"}\r\n          <span style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n            {stock.rem_qty}\r\n          </span>\r\n          ,\r\n        </span>\r\n      ))}\r\n    </marquee>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Header from '../Header';\r\nimport Footer from '../Footer';\r\n\r\nexport default function SidebarLayout(props) {\r\n  function getComponent(key) {\r\n    return props.children.filter((component) => {\r\n      return component.key === key;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className='container-fluid'>\r\n        <div className='row mb-2'>\r\n          <div className='col-4'>{getComponent('side-left')}</div>\r\n          <div className='col-8'>{getComponent('side-right')}</div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col'>{getComponent('main')}</div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Spinner } from \"reactstrap\";\r\nimport queryString from \"query-string\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions\";\r\nimport FullLayout from \"../Layouts/FullLayout\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    isFormloading: false,\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const parsed = queryString.parse(this.props.location.search);\r\n    this.setState(parsed);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    this.setState({ isFormloading: true, hasErrors: false });\r\n    this.props.loginUser(\r\n      email,\r\n      password,\r\n      (redirectTo) => this.props.history.push(redirectTo),\r\n      () => this.setState({ isFormloading: false })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isFormloading) return <Spinner color=\"primary\" />;\r\n    return (\r\n      <FullLayout>\r\n        <aside key=\"sidebar\">\r\n          <h1>Login</h1>\r\n        </aside>\r\n        <main key=\"main\" className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"Your Email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"password\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  placeholder=\"Your Password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <Button>Sign in</Button>\r\n              <p style={{ color: \"red\", fontSize: \"12px\" }}>\r\n                {this.props.errorMessage}\r\n              </p>\r\n            </Form>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth.authenticated,\r\n    errorMessage: state.auth.error,\r\n    redirectURL: state.redirectURL,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.logoutUser(() => this.props.history.push(\"/login\"));\r\n  }\r\n  render() {\r\n    return <div>Loading...</div>;\r\n  }\r\n}\r\n\r\nexport default connect(null, { logoutUser })(Logout);\r\n","import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\n\r\nexport default function SidebarLayout(props) {\r\n  function getComponent(key) {\r\n    return props.children.filter((component) => {\r\n      return component.key === key;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">{getComponent(\"side\")}</div>\r\n          <div className=\"col-9\">{getComponent(\"main\")}</div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Sidebar extends Component {\r\n  render() {\r\n    const { latestSales, auth } = this.props;\r\n    console.log('latestSales', latestSales);\r\n    return (\r\n      <div className='card'>\r\n        <div className='card-body'>\r\n          {/* {auth.permission &&\r\n            (auth.permission.name === 'all' ||\r\n              auth.permission.name === 'reports') && (\r\n              <Button\r\n                tag={Link}\r\n                to='/daily-sale-report'\r\n                color='warning'\r\n                className='text-uppercase m-1'\r\n                size='sm'\r\n              >\r\n                Daily Sale\r\n              </Button>\r\n            )}\r\n          {auth.permission &&\r\n            (auth.permission.name === 'all' ||\r\n              auth.permission.name === 'data-entry' ||\r\n              auth.permission.name === 'other') && (\r\n              <Button\r\n                tag={Link}\r\n                to='/'\r\n                color='warning'\r\n                className='text-uppercase m-1'\r\n                size='sm'\r\n              >\r\n                Invoice\r\n              </Button>\r\n            )}\r\n          {auth.permission && auth.permission.name === 'all' && (\r\n            <Button\r\n              tag={Link}\r\n              to='/sale-profit'\r\n              color='warning'\r\n              className='text-uppercase m-1'\r\n              size='sm'\r\n            >\r\n              Sale Profit\r\n            </Button>\r\n          )}\r\n          {auth.permission &&\r\n            (auth.permission.name === 'all' ||\r\n              auth.permission.name === 'reports') && (\r\n              <Button\r\n                tag={Link}\r\n                to='/stock-summary'\r\n                color='warning'\r\n                className='text-uppercase m-1'\r\n                size='sm'\r\n              >\r\n                Stock Summary\r\n              </Button>\r\n            )}\r\n          {auth.permission &&\r\n            (auth.permission.name === 'all' ||\r\n              auth.permission.name === 'reports' ||\r\n              auth.permission.name === 'other') && (\r\n              <Button\r\n                tag={Link}\r\n                to='/expense'\r\n                color='warning'\r\n                className='text-uppercase m-1'\r\n                size='sm'\r\n              >\r\n                Expense\r\n              </Button>\r\n            )}\r\n          {auth.permission &&\r\n            (auth.permission.name === 'all' ||\r\n              auth.permission.name === 'reports') && (\r\n              <Button\r\n                tag={Link}\r\n                to='/daily-purchase-report'\r\n                color='warning'\r\n                className='text-uppercase m-1'\r\n                size='sm'\r\n              >\r\n                Daily Purchase\r\n              </Button>\r\n            )}\r\n          {auth.permission &&\r\n            (auth.permission.name === 'all' ||\r\n              auth.permission.name === 'other') && (\r\n              <Button\r\n                tag={Link}\r\n                to='/customers'\r\n                color='warning'\r\n                className='text-uppercase m-1'\r\n                size='sm'\r\n              >\r\n                Customers\r\n              </Button>\r\n            )}\r\n          {auth.permission &&\r\n            (auth.permission.name === 'all' ||\r\n              auth.permission.name === 'data-entry') && (\r\n              <Button\r\n                tag={Link}\r\n                to='/bill'\r\n                color='warning'\r\n                className='text-uppercase m-1'\r\n                size='sm'\r\n              >\r\n                Bill\r\n              </Button>\r\n            )}\r\n          {auth.permission && auth.permission.name === 'all' && (\r\n            <Button\r\n              tag={Link}\r\n              to='/most-sold-items'\r\n              color='warning'\r\n              className='text-uppercase m-1'\r\n              size='sm'\r\n            >\r\n              Most Sold Items\r\n            </Button>\r\n          )}\r\n          {auth.permission && auth.permission.name === 'all' && (\r\n            <Button\r\n              tag={Link}\r\n              to='/cancelled-invoice'\r\n              color='warning'\r\n              className='text-uppercase m-1'\r\n              size='sm'\r\n            >\r\n              Cancelled Invoice\r\n            </Button>\r\n          )}\r\n          {auth.permission &&\r\n            (auth.permission.name === 'all' ||\r\n              auth.permission.name === 'reports') && (\r\n              <Button\r\n                tag={Link}\r\n                to='/item-gst'\r\n                color='warning'\r\n                className='text-uppercase m-1'\r\n                size='sm'\r\n              >\r\n                Item GST\r\n              </Button>\r\n            )}\r\n          {auth.permission && auth.permission.name === 'all' && (\r\n            <Button\r\n              tag={Link}\r\n              to='/add-item'\r\n              color='warning'\r\n              className='text-uppercase m-1'\r\n              size='sm'\r\n            >\r\n              Add Item\r\n            </Button>\r\n          )} */}\r\n          <div className='mt-4'>\r\n            {/* <AddCustomer /> */}\r\n            {this.props.children}\r\n          </div>\r\n          {latestSales && latestSales.length > 0 ? (\r\n            <ListGroup>\r\n              <h5 className='text-center pt-3'>Latest Customers</h5>\r\n              {latestSales.map((sale) => (\r\n                <ListGroupItem key={sale.customer.id} style={{ fontSize: 12 }}>\r\n                  {sale.customer.phone} {sale.customer.name}{' '}\r\n                  <Link to={`/customers/${sale.customer.id}`}>\r\n                    All Invoices\r\n                  </Link>\r\n                </ListGroupItem>\r\n              ))}\r\n            </ListGroup>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { auth: state.auth.authenticated };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Sidebar);\r\n","import React, { Component } from 'react';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport billing from '../api/billing';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    value: this.props.intialValue,\r\n    suggestions: [],\r\n  };\r\n\r\n  onChange = (event, { newValue }) => {\r\n    this.setState(\r\n      {\r\n        value: newValue,\r\n      },\r\n      this.props.handleChange(newValue)\r\n    );\r\n  };\r\n\r\n  onSuggestionsFetchRequested = async ({ value }) => {\r\n    if (value.length >= 3) {\r\n      const suggestions = await this.getSuggestions(value);\r\n      this.setState({\r\n        suggestions,\r\n      });\r\n    }\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  // Teach Autosuggest how to calculate suggestions for any given input value.\r\n  getSuggestions = async (value) => {\r\n    // const inputValue = value.trim().toLowerCase();\r\n    // const inputLength = inputValue.length;\r\n\r\n    // return inputLength === 0\r\n    //   ? []\r\n    //   : languages.filter(\r\n    //       (lang) => lang.name.toLowerCase().slice(0, inputLength) === inputValue\r\n    //     );\r\n\r\n    try {\r\n      const response = await billing.get(`customer-list?q=${value}`);\r\n      // console.log(response);\r\n      return response.data.customers;\r\n    } catch (err) {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // When suggestion is clicked, Autosuggest needs to populate the input\r\n  // based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n  // input value for every given suggestion.\r\n  getSuggestionValue = (suggestion) => {\r\n    this.props.handleChange(suggestion.phone);\r\n    return suggestion.phone;\r\n  };\r\n\r\n  renderSuggestion = (suggestion) => (\r\n    <div>\r\n      {suggestion.phone}, {suggestion.name}\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n\r\n    const inputProps = {\r\n      placeholder: 'Search Customer',\r\n      value,\r\n      className: 'form-control',\r\n      onChange: this.onChange,\r\n    };\r\n\r\n    return (\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        getSuggestionValue={this.getSuggestionValue}\r\n        renderSuggestion={this.renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\nimport {\r\n  searchCustomerByPhone,\r\n  updateCustomer,\r\n  selectCustomer,\r\n} from '../actions';\r\nimport Search from './Search';\r\n\r\nclass AddCustomer extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    phone: '',\r\n    phoneError: '',\r\n    name: '',\r\n    address: '',\r\n    city: '',\r\n    state: '',\r\n    pincode: '',\r\n    card: '',\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(function (prevState) {\r\n      return { isOpen: !prevState.isOpen };\r\n    });\r\n  };\r\n\r\n  handlePhoneChange = (phone) => {\r\n    this.setState({ phone, phoneError: '' });\r\n  };\r\n\r\n  addNewCustomer = (e) => {\r\n    e.preventDefault();\r\n    if (!this.state.phone) {\r\n      this.setState({ phoneError: 'Customer Mobile Number is required' });\r\n      return;\r\n    }\r\n    this.props.searchCustomerByPhone(this.state.phone, this.toggleModal);\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleFormSubmit = (e, id) => {\r\n    e.preventDefault();\r\n    this.props.updateCustomer(id, this.state, this.toggleModal);\r\n  };\r\n\r\n  renderForm = () => {\r\n    const { customer } = this.props;\r\n    return customer.name &&\r\n      customer.billing_address &&\r\n      customer.billing_city &&\r\n      customer.billing_state &&\r\n      customer.billing_pincode ? (\r\n      <>\r\n        <h3 className='text-center text-uppercase'>{customer.type} customer</h3>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for='phone'>Phone</Label>\r\n              <Input\r\n                type='text'\r\n                name='phone'\r\n                id='phone'\r\n                value={customer.phone}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for='name'>Name</Label>\r\n              <Input\r\n                type='text'\r\n                name='name'\r\n                id='name'\r\n                value={customer.name}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <FormGroup>\r\n          <Label for='address'>Address</Label>\r\n          <Input\r\n            type='textarea'\r\n            name='address'\r\n            id='address'\r\n            value={customer.billing_address}\r\n            readOnly\r\n          />\r\n        </FormGroup>\r\n        <Row form>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for='city'>City</Label>\r\n              <Input\r\n                type='text'\r\n                name='city'\r\n                id='city'\r\n                value={customer.billing_city}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for='state'>State</Label>\r\n              <Input\r\n                type='text'\r\n                name='state'\r\n                id='state'\r\n                value={customer.billing_state}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for='pincode'>Pincode</Label>\r\n              <Input\r\n                type='text'\r\n                name='pincode'\r\n                id='pincode'\r\n                value={customer.billing_pincode}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup>\r\n              <Label for='card'>Card Id</Label>\r\n              <Input\r\n                type='text'\r\n                name='card'\r\n                id='card'\r\n                value={customer.card}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Button\r\n          color='success'\r\n          onClick={() => this.props.selectCustomer(customer, this.toggleModal)}\r\n        >\r\n          Select Customer\r\n        </Button>\r\n      </>\r\n    ) : (\r\n      <Form onSubmit={(e) => this.handleFormSubmit(e, customer.id)}>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for='phone'>Phone</Label>\r\n              <Input\r\n                type='text'\r\n                name='phone'\r\n                id='phone'\r\n                value={customer.phone}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for='name'>Name</Label>\r\n              <Input\r\n                type='text'\r\n                name='name'\r\n                id='name'\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <FormGroup>\r\n          <Label for='address'>Address</Label>\r\n          <Input\r\n            type='textarea'\r\n            name='address'\r\n            id='address'\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </FormGroup>\r\n        <Row form>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for='city'>City</Label>\r\n              <Input\r\n                type='text'\r\n                name='city'\r\n                id='city'\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for='state'>Force Name</Label>\r\n              <Input\r\n                type='text'\r\n                name='state'\r\n                id='state'\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for='pincode'>Pincode</Label>\r\n              <Input\r\n                type='text'\r\n                name='pincode'\r\n                id='pincode'\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup>\r\n              <Label for='card'>Card Id</Label>\r\n              <Input\r\n                type='text'\r\n                name='card'\r\n                id='card'\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Button color='success'>Submit Customer</Button>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <InputGroup>\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>+91</InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input\r\n            placeholder='Customer Mobile Number'\r\n            maxLength='10'\r\n            value={this.state.phone}\r\n            onChange={this.handlePhoneChange}\r\n          />\r\n        </InputGroup> */}\r\n        <form onSubmit={this.addNewCustomer}>\r\n          <Search\r\n            handleChange={this.handlePhoneChange}\r\n            intialValue={this.state.phone}\r\n          />\r\n          <div style={{ display: 'block', color: 'red', fontSize: '12px' }}>\r\n            {this.state.phoneError}\r\n          </div>\r\n          <Button\r\n            color='success'\r\n            className='text-uppercase mt-2'\r\n            size='sm'\r\n            block\r\n            onClick={this.addNewCustomer}\r\n          >\r\n            add new customer\r\n          </Button>\r\n        </form>\r\n        <Modal\r\n          isOpen={this.state.isOpen}\r\n          toggle={this.toggleModal}\r\n          backdrop={'static'}\r\n        >\r\n          <ModalHeader>Add New Customer</ModalHeader>\r\n          {/* toggle={this.toggleModal} */}\r\n          <ModalBody>{this.renderForm()}</ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { customer: state.customer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  searchCustomerByPhone,\r\n  updateCustomer,\r\n  selectCustomer,\r\n})(AddCustomer);\r\n","import React, { Component } from 'react';\r\n// import Autosuggest from \"react-autosuggest\";\r\nimport '../Search.css';\r\nimport billing from '../api/billing';\r\nimport { connect } from 'react-redux';\r\nimport { addToCart } from '../actions';\r\n// import { Input } from \"reactstrap\";\r\n\r\n// const items = [\r\n//   {\r\n//     product_code: 11111,\r\n//     product_name: \"Shirt\",\r\n//     gst: 5,\r\n//     unit_cost: 30,\r\n//   },\r\n//   {\r\n//     product_code: 11112,\r\n//     product_name: \"Skirt\",\r\n//     gst: 5,\r\n//     unit_cost: 30,\r\n//   },\r\n// ];\r\n\r\nfunction escapeRegexCharacters(str) {\r\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n\r\nclass SearchItem extends Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleKeyDown = async (e) => {\r\n    if (e.key === 'Enter') {\r\n      const { value } = e.target;\r\n      const { customerType } = this.props;\r\n      let currentItem = this.props.cart.items.find(\r\n        (item) => item.product_code === value\r\n      );\r\n      if (!currentItem) {\r\n        let currentItem = await this.searchProduct(value, customerType);\r\n        this.props.addToCart(currentItem);\r\n      }\r\n      this.setState({ value: '' });\r\n    }\r\n  };\r\n\r\n  searchProduct = async (value, customerType) => {\r\n    const response = await billing.post('search-single-item', {\r\n      product_code: value,\r\n      customerType,\r\n    });\r\n\r\n    return response.data.item;\r\n  };\r\n\r\n  getSuggestions(value) {\r\n    const escapedValue = escapeRegexCharacters(value.trim());\r\n\r\n    if (escapedValue === '') {\r\n      return [];\r\n    }\r\n\r\n    const regex = new RegExp('^' + escapedValue, 'i');\r\n\r\n    return this.state.suggestions.filter(\r\n      (item) => regex.test(item.product_name) || regex.test(item.product_code)\r\n    );\r\n  }\r\n\r\n  getSuggestionValue(suggestion) {\r\n    return suggestion.product_name;\r\n  }\r\n\r\n  renderSuggestion(suggestion) {\r\n    return <span>{suggestion.product_name}</span>;\r\n  }\r\n\r\n  onSuggestionsFetchRequested = async ({ value }) => {\r\n    try {\r\n      const response = await billing.post('search-list', {\r\n        q: value,\r\n      });\r\n      this.setState({\r\n        suggestions: response.data.searched_items,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    // this.setState({\r\n    //   suggestions: this.getSuggestions(value),\r\n    // });\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    // const inputProps = {\r\n    //   placeholder: \"Search product by code or name\",\r\n    //   value,\r\n    //   autoFocus: true,\r\n    //   className: \"form-control\",\r\n    //   onChange: this.onChange,\r\n    //   onKeyDown: this.handleKeyDown,\r\n    // };\r\n\r\n    // return (\r\n    //   <Autosuggest\r\n    //     suggestions={suggestions}\r\n    //     onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n    //     onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n    //     getSuggestionValue={this.getSuggestionValue}\r\n    //     renderSuggestion={this.renderSuggestion}\r\n    //     inputProps={inputProps}\r\n    //   />\r\n    // );\r\n\r\n    return (\r\n      <input\r\n        placeholder='Search product by code'\r\n        value={value}\r\n        autoFocus={true}\r\n        className='form-control'\r\n        onChange={this.onChange}\r\n        onKeyDown={this.handleKeyDown}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { cart: state.cart, customerType: state.auth.authenticated.user.type };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addToCart })(SearchItem);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateURL } from \"../actions\";\r\n\r\nexport default function requireAuth(ChildComponent) {\r\n  class ComposedComponent extends Component {\r\n    componentDidMount() {\r\n      this.shouldNavigateAway();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.shouldNavigateAway();\r\n    }\r\n\r\n    shouldNavigateAway() {\r\n      console.log(this.props.auth);\r\n      this.props.updateURL(this.props.currentURL);\r\n      if (!this.props.auth.isLoggedIn) {\r\n        this.props.history.push(`/login`);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <ChildComponent {...this.props} />;\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = (state, ownProps) => {\r\n    return {\r\n      auth: state.auth.authenticated,\r\n      currentURL: ownProps.location.pathname,\r\n    };\r\n  };\r\n\r\n  return connect(mapStateToProps, { updateURL })(ComposedComponent);\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n  Input,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  updateCart,\r\n  updateCartItem,\r\n  updateCartModeOfPayment,\r\n  updateCartTotalAmount,\r\n  updateCartAmountRepay,\r\n  updateCartAmountPaid,\r\n  updateCartDiscount,\r\n  clearCart,\r\n  createInvoice,\r\n} from '../../actions';\r\nimport billing from '../../api/billing';\r\nimport SidebarLayout from '../Layouts/SidebarLayout';\r\nimport Sidebar from '../Sidebar';\r\nimport AddCustomer from '../AddCustomer';\r\nimport SearchItem from '../SearchItem';\r\nimport requireAuth from '../../helpers/requireAuth';\r\n\r\nclass CreateInvoice extends Component {\r\n  state = {\r\n    message: {\r\n      headMessage: '',\r\n      bodyMessage: [],\r\n      messageColor: '',\r\n    },\r\n    latestSales: [],\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    // this.props.clearCart();\r\n    try {\r\n      const response = await billing.get('last-customers');\r\n      this.setState({ latestSales: response.data.latestSales });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  removeFromCart = (id) => {\r\n    const { items } = this.props.cart;\r\n    const filteredItems = items.filter((item) => item.id !== id);\r\n    this.props.updateCart(filteredItems);\r\n  };\r\n\r\n  updateQty = (e, idx) => {\r\n    this.getItemFromIdAndCalculatePrice(idx, e.target.value);\r\n  };\r\n\r\n  // updateDiscount = (e, id, calculated_gst) => {\r\n  //   this.getItemFromIdAndCalculatePrice(\r\n  //     id,\r\n  //     \"discount\",\r\n  //     e.target.value,\r\n  //     calculated_gst\r\n  //   );\r\n  // };\r\n\r\n  getItemFromIdAndCalculatePrice = (idx, value) => {\r\n    const { items } = this.props.cart;\r\n    items[idx].qty = Number(value);\r\n    const itemCost = Number(items[idx].sale_price * items[idx].qty).toFixed(2);\r\n    items[idx].price = itemCost;\r\n    // since the object are reference type, passing it to function and changing its value will change original object ie \"foundItem\"\r\n    // so passing \"foundItem\" in calculateItemPrice will change original \"foundItem\" values\r\n    // this.calculateItemPrice(foundItem);\r\n    console.log('items', items);\r\n    const updatedItems = [...items];\r\n    this.props.updateCartItem(updatedItems);\r\n  };\r\n\r\n  // calculateItemPrice = (foundItem) => {\r\n  //   const itemCost = Number(foundItem.sale_price * foundItem.qty).toFixed(2);\r\n  //   foundItem.price = itemCost;\r\n  // };\r\n\r\n  renderTableBody = () => {\r\n    const { cart } = this.props;\r\n    return cart.items.length ? (\r\n      cart.items.map((item, idx) => (\r\n        <tr key={item.id}>\r\n          <td>\r\n            <button\r\n              onClick={() => this.removeFromCart(item.id)}\r\n              className='btn btn-danger btn-sm'\r\n            >\r\n              <i className='fa fa-times' aria-hidden='true'></i>\r\n            </button>\r\n          </td>\r\n          <td>{idx + 1}</td>\r\n          <td>{item.product_code}</td>\r\n          <td>{item.product_name}</td>\r\n          <td>{item.mrp}</td>\r\n          {/* <td>{item.discount}</td> */}\r\n          <td>{item.sale_price}</td>\r\n          <td>{item.gst + '%'}</td>\r\n          {/* <td>{this.calculatedGst(item)}</td> */}\r\n          <td>\r\n            <input\r\n              type='number'\r\n              className='form-control'\r\n              min='0'\r\n              onChange={(e) => this.updateQty(e, idx)}\r\n              value={item.qty}\r\n            />\r\n            {/* <span\r\n              style={{ color: \"red\", fontSize: 10 }}\r\n            >{`${item.qty} remaining`}</span> */}\r\n          </td>\r\n          <td>{item.price}</td>\r\n        </tr>\r\n      ))\r\n    ) : (\r\n      <tr>\r\n        <td colSpan='10' className='text-center'>\r\n          No Item in cart.\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  calculatedGst = (item) => {\r\n    const { sale_price, gst, qty } = item;\r\n    const calculated_gst = Number(\r\n      sale_price - sale_price * (100 / (100 + parseFloat(gst)))\r\n    ).toFixed(2);\r\n    item.calculated_gst = calculated_gst;\r\n    return Number(calculated_gst * qty).toFixed(2);\r\n  };\r\n\r\n  handleInvoiceSubmit = () => {\r\n    this.props.createInvoice(\r\n      this.props.cart,\r\n      this.props.customer,\r\n      (id) => this.props.history.push(`invoice/${id}`),\r\n      (message) => {\r\n        this.setState({ message: message });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { cart, customer } = this.props;\r\n    // console.log(cart);\r\n    return (\r\n      <SidebarLayout>\r\n        <Sidebar latestSales={this.state.latestSales} key='side'>\r\n          <AddCustomer />\r\n        </Sidebar>\r\n        <main key='main' className='card'>\r\n          <div className='card-body'>\r\n            <FormGroup>\r\n              <SearchItem />\r\n            </FormGroup>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              {customer.name && (\r\n                <>\r\n                  <p>\r\n                    <strong>Party</strong>: {customer.name},{' '}\r\n                    {'+91' + customer.phone}\r\n                  </p>\r\n                  <p>\r\n                    {customer.billing_address}, {customer.billing_city}{' '}\r\n                    {customer.billing_state} - {customer.billing_pincode}\r\n                  </p>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div\r\n              style={{\r\n                maxHeight: '58vh',\r\n                overflowX: 'hidden',\r\n                overflowY: 'scroll',\r\n              }}\r\n            >\r\n              <Table bordered striped>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Action</th>\r\n                    <th>SNo.</th>\r\n                    <th>Product Code</th>\r\n                    <th>Product Name</th>\r\n                    <th>MRP</th>\r\n                    {/* <th>Discount</th> */}\r\n                    <th>Sale Price</th>\r\n                    <th>GST</th>\r\n                    {/* <th>Calc. GST</th> */}\r\n                    <th>Qty</th>\r\n                    <th>Price</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{this.renderTableBody()}</tbody>\r\n              </Table>\r\n            </div>\r\n            <hr />\r\n            <div>\r\n              <Row>\r\n                {/* <Col>\r\n                  <Label for='discount'>Discount</Label>\r\n                  <Input\r\n                    type='text'\r\n                    id='discount'\r\n                    name='discount'\r\n                    value={cart.discount}\r\n                    onChange={(e) =>\r\n                      this.props.updateCartDiscount(e.target.value)\r\n                    }\r\n                  />\r\n                </Col> */}\r\n                <Col>\r\n                  <Label for='mode_of_payment'>Payment Mode</Label>\r\n                  <Input\r\n                    type='select'\r\n                    id='mode_of_payment'\r\n                    name='payment_mode'\r\n                    onChange={(e) =>\r\n                      this.props.updateCartModeOfPayment(e.target.value)\r\n                    }\r\n                  >\r\n                    {/* <option value=\"\">Select Payment</option> */}\r\n                    <option value='cash'>Cash Payment</option>\r\n                    <option value='bank'>Bank Payment</option>\r\n                    <option value='credit' selected={cart.amount_repay > 0}>\r\n                      Credit\r\n                    </option>\r\n                  </Input>\r\n                </Col>\r\n                {/* <Col>\r\n                <Label for=\"item_amount\">Item Amount</Label>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>Rs</InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    id=\"item_amount\"\r\n                    name=\"item_amount\"\r\n                    value={cart.item_amount}\r\n                    readOnly\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              <Col>\r\n                <Label for=\"total_gst\">Item Gst</Label>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>Rs</InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    id=\"item_gst\"\r\n                    name=\"item_gst\"\r\n                    value={cart.item_gst}\r\n                    readOnly\r\n                  />\r\n                </InputGroup>\r\n              </Col> */}\r\n                <Col>\r\n                  <Label for='total_amount'>Total Amount</Label>\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType='prepend'>\r\n                      <InputGroupText>Rs</InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      id='total_amount'\r\n                      name='total_amount'\r\n                      value={cart.total_amount}\r\n                      onChange={(e) =>\r\n                        this.props.updateCartTotalAmount(e.target.value)\r\n                      }\r\n                      readOnly\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                  <Label for='amount_paid'>Amount Paid</Label>\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType='prepend'>\r\n                      <InputGroupText>Rs</InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      id='amount_paid'\r\n                      name='amount_paid'\r\n                      value={cart.amount_paid}\r\n                      onChange={(e) =>\r\n                        this.props.updateCartAmountPaid(e.target.value)\r\n                      }\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                {/* </Row> */}\r\n                {/* <br /> */}\r\n                {/* <Row> */}\r\n                {/* <Col sm=\"3\">\r\n                <Label for=\"discount_or_offers\">Discount/Offers</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  id=\"discount_or_offers\"\r\n                  name=\"discount\"\r\n                  onChange={(e) =>\r\n                    this.props.updateCartDiscount(e.target.value)\r\n                  }\r\n                >\r\n                  <option value=\"\">Select Discount/Offers</option>\r\n                  <option value=\"discount\">Discount</option>\r\n                  <option value=\"offer\">Offer</option>\r\n                </Input>\r\n              </Col> */}\r\n                <Col>\r\n                  <Label for='amount_repay' style={{ color: 'red' }}>\r\n                    Amount Repay\r\n                  </Label>\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType='prepend'>\r\n                      <InputGroupText>Rs</InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      id='amount_repay'\r\n                      name='amount_repay'\r\n                      value={cart.amount_repay}\r\n                      onChange={(e) =>\r\n                        this.props.updateCartAmountRepay(e.target.value)\r\n                      }\r\n                      readOnly\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    color='success'\r\n                    className='mt-3'\r\n                    size='md'\r\n                    disabled={cart.total_amount <= 0}\r\n                    onClick={this.handleInvoiceSubmit}\r\n                  >\r\n                    Continue To Invoice{' '}\r\n                    <i class='fa fa-arrow-right' aria-hidden='true'></i>\r\n                  </Button>\r\n                  <span\r\n                    style={{\r\n                      color: this.state.message.messageColor,\r\n                      fontSize: '12px',\r\n                    }}\r\n                    className='ml-3'\r\n                  >\r\n                    {this.state.message.bodyMessage[0]}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </SidebarLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { cart: state.cart, customer: state.customer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateCart,\r\n  updateCartItem,\r\n  updateCartModeOfPayment,\r\n  updateCartTotalAmount,\r\n  updateCartAmountRepay,\r\n  updateCartAmountPaid,\r\n  updateCartDiscount,\r\n  createInvoice,\r\n  clearCart,\r\n})(requireAuth(CreateInvoice));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { searchPartyByPhone, updateParty, selectParty } from \"../actions\";\r\n\r\nclass AddParty extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    phone: \"\",\r\n    phoneError: \"\",\r\n    name: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    pincode: \"\",\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(function (prevState) {\r\n      return { isOpen: !prevState.isOpen };\r\n    });\r\n  };\r\n\r\n  handlePhoneChange = (e) => {\r\n    this.setState({ phone: e.target.value, phoneError: \"\" });\r\n  };\r\n\r\n  addNewParty = () => {\r\n    if (!this.state.phone) {\r\n      this.setState({ phoneError: \"Party Mobile Number is required\" });\r\n      return;\r\n    }\r\n    this.props.searchPartyByPhone(this.state.phone, this.toggleModal);\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleFormSubmit = (e, id) => {\r\n    e.preventDefault();\r\n    this.props.updateParty(id, this.state, this.toggleModal);\r\n  };\r\n\r\n  renderForm = () => {\r\n    const { party } = this.props;\r\n    return party.name &&\r\n      party.billing_address &&\r\n      party.billing_city &&\r\n      party.billing_state &&\r\n      party.billing_pincode ? (\r\n      <>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"phone\">Phone</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                id=\"phone\"\r\n                value={party.phone}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"name\">Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                value={party.name}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <FormGroup>\r\n          <Label for=\"address\">Address</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"address\"\r\n            id=\"address\"\r\n            value={party.billing_address}\r\n            readOnly\r\n          />\r\n        </FormGroup>\r\n        <Row form>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for=\"city\">City</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                id=\"city\"\r\n                value={party.billing_city}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for=\"state\">State</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"state\"\r\n                id=\"state\"\r\n                value={party.billing_state}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for=\"pincode\">Pincode</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"pincode\"\r\n                id=\"pincode\"\r\n                value={party.billing_pincode}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Button\r\n          color=\"success\"\r\n          onClick={() => this.props.selectParty(party, this.toggleModal)}\r\n        >\r\n          Select Party\r\n        </Button>\r\n      </>\r\n    ) : (\r\n      <Form onSubmit={(e) => this.handleFormSubmit(e, party.id)}>\r\n        <Row form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"phone\">Phone</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                id=\"phone\"\r\n                value={party.phone}\r\n                readOnly\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"name\">Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <FormGroup>\r\n          <Label for=\"address\">Address</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"address\"\r\n            id=\"address\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </FormGroup>\r\n        <Row form>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for=\"city\">City</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                id=\"city\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for=\"state\">State</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"state\"\r\n                id=\"state\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label for=\"pincode\">Pincode</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"pincode\"\r\n                id=\"pincode\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Button color=\"success\">Submit Party</Button>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>+91</InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input\r\n            placeholder=\"Party Mobile Number\"\r\n            maxLength=\"10\"\r\n            value={this.state.phone}\r\n            onChange={this.handlePhoneChange}\r\n          />\r\n        </InputGroup>\r\n        <div style={{ display: \"block\", color: \"red\", fontSize: \"12px\" }}>\r\n          {this.state.phoneError}\r\n        </div>\r\n        <Button\r\n          color=\"success\"\r\n          className=\"text-uppercase mt-2\"\r\n          size=\"sm\"\r\n          block\r\n          onClick={this.addNewParty}\r\n        >\r\n          add new party\r\n        </Button>\r\n        <Modal isOpen={this.state.isOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Add New Party</ModalHeader>\r\n          <ModalBody>{this.renderForm()}</ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { party: state.party };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  searchPartyByPhone,\r\n  updateParty,\r\n  selectParty,\r\n})(AddParty);\r\n","import React, { Component } from 'react';\r\nimport billing from '../../api/billing';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormGroup,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from 'reactstrap';\r\nimport { searchPartyByPhone, updateParty, selectParty } from '../../actions';\r\n\r\nlet file = null;\r\nclass AddParty extends Component {\r\n  state = {\r\n    product_code: '',\r\n    product_name: '',\r\n    hsn: '',\r\n    image: '',\r\n    brand: '',\r\n    wholesale_percent: '',\r\n    retail_percent: '',\r\n    gst: '',\r\n    message: '',\r\n    loading: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    // console.log(e.target);\r\n    if (e.target.type === 'file') {\r\n      this.setState({\r\n        [e.target.name]: e.target.files[0],\r\n      });\r\n      file = e.target.files[0];\r\n      // console.log(file);\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.setState({\r\n      loading: true,\r\n      message: '',\r\n    });\r\n    const {\r\n      product_code,\r\n      product_name,\r\n      hsn,\r\n      image,\r\n      brand,\r\n      wholesale_percent,\r\n      retail_percent,\r\n      gst,\r\n    } = this.state;\r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    formData.append('product_code', product_code);\r\n    formData.append('product_name', product_name);\r\n    formData.append('hsn', hsn || '');\r\n    formData.append('image', file || '');\r\n    formData.append('brand', brand || '');\r\n    formData.append('wholesale_percent', wholesale_percent);\r\n    formData.append('retail_percent', retail_percent);\r\n    formData.append('gst', gst);\r\n    try {\r\n      await billing.post('add-fix-item', formData, {\r\n        headers: {\r\n          'content-type': 'multipart/form-data',\r\n        },\r\n      });\r\n      this.setState({\r\n        message: 'Item added successfully',\r\n        loading: false,\r\n        retail_percent: '',\r\n        wholesale_percent: '',\r\n        gst: '',\r\n        image: '',\r\n        hsn: '',\r\n        product_name: '',\r\n        product_code: '',\r\n      });\r\n    } catch (err) {\r\n      this.setState({ message: err.response.data.message, loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      product_code,\r\n      product_name,\r\n      hsn,\r\n      brand,\r\n      wholesale_percent,\r\n      retail_percent,\r\n      gst,\r\n      message,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <Modal\r\n          isOpen={this.props.isOpen}\r\n          toggle={this.props.toggle}\r\n          fullscreen={true}\r\n          size='lg'\r\n        >\r\n          <ModalHeader toggle={this.props.toggle}>Add Item</ModalHeader>\r\n          <ModalBody>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Product Code</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='product_code'\r\n                    value={product_code}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Product Name</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='product_name'\r\n                    value={product_name}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>HSN</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='hsn'\r\n                    value={hsn}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Image</Label>\r\n                  <Input\r\n                    type='file'\r\n                    name='image'\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Brand</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='brand'\r\n                    value={brand}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Wholesale % margin</Label>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type='text'\r\n                      name='wholesale_percent'\r\n                      value={wholesale_percent}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <InputGroupAddon addonType='append'>\r\n                      <InputGroupText>%</InputGroupText>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Retail % margin</Label>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type='text'\r\n                      name='retail_percent'\r\n                      value={retail_percent}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <InputGroupAddon addonType='append'>\r\n                      <InputGroupText>%</InputGroupText>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>GST %</Label>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type='text'\r\n                      name='gst'\r\n                      value={gst}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <InputGroupAddon addonType='append'>\r\n                      <InputGroupText>%</InputGroupText>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Button\r\n              color='success'\r\n              className='mt-3'\r\n              size='sm'\r\n              onClick={this.handleSubmit}\r\n              disabled={loading}\r\n            >\r\n              Add Item\r\n            </Button>\r\n            <span>{message}</span>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { party: state.party };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  searchPartyByPhone,\r\n  updateParty,\r\n  selectParty,\r\n})(AddParty);\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n  Input,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { createBill } from '../../actions';\r\nimport FullLayout from '../Layouts/FullLayout';\r\nimport Sidebar from '../Sidebar';\r\nimport AddParty from '../AddParty';\r\nimport billing from '../../api/billing';\r\nimport AddItemModal from '../Item/AddItemModal';\r\n\r\nconst EXCLUSIVE_OF_TAX = 'e';\r\nconst INCLUSIVE_OF_TAX = 'i';\r\nclass CreateBill extends Component {\r\n  state = {\r\n    tableData: [\r\n      {\r\n        key: uuidv4(),\r\n        product_code: '',\r\n        product_name: '',\r\n        hsn: '',\r\n        image: '',\r\n        ws_margin: '',\r\n        r_margin: '',\r\n        mrp: 0,\r\n        unit_cost: 0,\r\n        discount: 0,\r\n        final_unit_cost: 0,\r\n        unit_cost_with_gst: 0,\r\n        sale_price: 0,\r\n        whole_sale_price: 0,\r\n        sale_price_to_mrp: '',\r\n        whole_sale_price_to_mrp: '',\r\n        gst: 0,\r\n        expiry: new Date(new Date().setFullYear(new Date().getFullYear() + 1))\r\n          .toISOString()\r\n          .slice(0, 10),\r\n        mfg: new Date().toISOString().slice(0, 10),\r\n        qty: 0,\r\n        total_cost: 0,\r\n      },\r\n    ],\r\n    payment_mode: '',\r\n    total_amount: 0,\r\n    amount_repay: 0,\r\n    amount_paid: 0,\r\n    discount: '',\r\n    tax_type: EXCLUSIVE_OF_TAX,\r\n    message: {\r\n      headMessage: '',\r\n      bodyMessage: [],\r\n      messageColor: '',\r\n    },\r\n    addItem: false,\r\n  };\r\n\r\n  setAddItem = () => {\r\n    this.setState((prevState) => {\r\n      return { addItem: !prevState.addItem };\r\n    });\r\n  };\r\n\r\n  deleteRow = (key) => {\r\n    // console.log(idx);\r\n    const { tableData } = this.state;\r\n    const filteredItems = tableData.filter((item) => item.key !== key);\r\n    const total_amount = filteredItems.reduce((total, item) => {\r\n      return Number(parseFloat(total) + parseFloat(item.total_cost)).toFixed(2);\r\n    }, 0);\r\n    this.setState({ tableData: filteredItems, total_amount: total_amount });\r\n  };\r\n\r\n  addRow = () => {\r\n    const { tableData } = this.state;\r\n    const filteredData = [\r\n      ...tableData,\r\n      {\r\n        key: uuidv4(),\r\n        product_code: '',\r\n        product_name: '',\r\n        hsn: '',\r\n        image: '',\r\n        ws_margin: '',\r\n        r_margin: '',\r\n        mrp: 0,\r\n        unit_cost: 0,\r\n        discount: 0,\r\n        final_unit_cost: 0,\r\n        unit_cost_with_gst: 0,\r\n        sale_price: 0,\r\n        whole_sale_price: 0,\r\n        sale_price_to_mrp: '',\r\n        whole_sale_price_to_mrp: '',\r\n        gst: 0,\r\n        expiry: new Date(new Date().setFullYear(new Date().getFullYear() + 1))\r\n          .toISOString()\r\n          .slice(0, 10),\r\n        mfg: new Date().toISOString().slice(0, 10),\r\n        qty: 0,\r\n        total_cost: 0,\r\n      },\r\n    ];\r\n    // console.log(filteredData);\r\n    this.setState({ tableData: filteredData });\r\n  };\r\n\r\n  handleInput = (e, idx) => {\r\n    this.formInputs(e, idx);\r\n  };\r\n\r\n  setTaxType = (e, type) => {\r\n    this.setState({ tax_type: type }, () => this.setSalePriceForAllItems(type));\r\n  };\r\n\r\n  calculateTotalCost = (unit_cost, qty, gst, tax_type) => {\r\n    if (tax_type === INCLUSIVE_OF_TAX) {\r\n      return Number(unit_cost * qty).toFixed(2);\r\n    } else {\r\n      const calculated_gst = (gst * unit_cost) / 100;\r\n      return Number((Number(unit_cost) + Number(calculated_gst)) * qty).toFixed(\r\n        2\r\n      );\r\n    }\r\n  };\r\n\r\n  setSalePriceForAllItems = (tax_type) => {\r\n    const { tableData } = this.state;\r\n    const updatedData = tableData.map((item) => {\r\n      item.sale_price = this.calculateSalePrice(\r\n        tax_type,\r\n        item.unit_cost,\r\n        item.r_margin,\r\n        item.gst\r\n      );\r\n      item.whole_sale_price = this.calculateWholeSalePrice(\r\n        tax_type,\r\n        item.unit_cost,\r\n        item.ws_margin,\r\n        item.gst\r\n      );\r\n      item.sale_price_to_mrp = this.calculateSaleProfitPercent(\r\n        item.mrp,\r\n        item.sale_price\r\n      );\r\n      item.whole_sale_price_to_mrp = this.calculateWholeSaleProfitPercent(\r\n        item.mrp,\r\n        item.whole_sale_price\r\n      );\r\n      item.total_cost = this.calculateTotalCost(\r\n        item.unit_cost,\r\n        item.qty,\r\n        item.gst,\r\n        tax_type\r\n      );\r\n      return item;\r\n    });\r\n    this.setState({ tableData: updatedData });\r\n  };\r\n\r\n  calculateSalePrice = (tax_type, unit_cost, r_margin, gst) => {\r\n    if (tax_type === EXCLUSIVE_OF_TAX) {\r\n      const sale_price_before_gst =\r\n        Number(unit_cost) + (r_margin * unit_cost) / 100;\r\n\r\n      return sale_price_before_gst + (gst * sale_price_before_gst) / 100;\r\n    }\r\n    const calculated_gst = Number(\r\n      Number(unit_cost) - Number(unit_cost) * (100 / (100 + parseFloat(gst)))\r\n    ).toFixed(2);\r\n\r\n    const actual_unit_cost = unit_cost - calculated_gst;\r\n\r\n    return Number(\r\n      Number(actual_unit_cost) +\r\n        (r_margin * actual_unit_cost) / 100 +\r\n        Number(calculated_gst)\r\n    ).toFixed(2);\r\n  };\r\n\r\n  calculateWholeSalePrice = (tax_type, unit_cost, ws_margin, gst) => {\r\n    if (tax_type === EXCLUSIVE_OF_TAX) {\r\n      const whole_sale_price_before_gst =\r\n        Number(unit_cost) + (ws_margin * unit_cost) / 100;\r\n\r\n      return (\r\n        whole_sale_price_before_gst + (gst * whole_sale_price_before_gst) / 100\r\n      );\r\n    }\r\n    const calculated_gst = Number(\r\n      Number(unit_cost) - Number(unit_cost) * (100 / (100 + parseFloat(gst)))\r\n    ).toFixed(2);\r\n\r\n    const actual_unit_cost = unit_cost - calculated_gst;\r\n\r\n    return Number(\r\n      Number(actual_unit_cost) +\r\n        (ws_margin * actual_unit_cost) / 100 +\r\n        Number(calculated_gst)\r\n    ).toFixed(2);\r\n  };\r\n\r\n  formInputs = (e, idx) => {\r\n    const { tableData, tax_type } = this.state;\r\n    tableData[idx][e.target.name] = e.target.value;\r\n    if (e.target.name === 'unit_cost' || e.target.name === 'gst') {\r\n      tableData[idx].sale_price = this.calculateSalePrice(\r\n        tax_type,\r\n        tableData[idx].unit_cost,\r\n        tableData[idx].r_margin,\r\n        tableData[idx].gst\r\n      );\r\n      tableData[idx].whole_sale_price = this.calculateWholeSalePrice(\r\n        tax_type,\r\n        tableData[idx].unit_cost,\r\n        tableData[idx].ws_margin,\r\n        tableData[idx].gst\r\n      );\r\n    }\r\n    if (e.target.name === 'mrp') {\r\n      tableData[idx].sale_price_to_mrp = this.calculateSaleProfitPercent(\r\n        tableData[idx].mrp,\r\n        tableData[idx].sale_price\r\n      );\r\n\r\n      tableData[\r\n        idx\r\n      ].whole_sale_price_to_mrp = this.calculateWholeSaleProfitPercent(\r\n        tableData[idx].mrp,\r\n        tableData[idx].whole_sale_price\r\n      );\r\n    }\r\n    if (e.target.name === 'unit_cost' || e.target.name === 'discount') {\r\n      tableData[idx].final_unit_cost = this.calculateFinalUnitCost(\r\n        tableData[idx].unit_cost,\r\n        tableData[idx].discount\r\n      );\r\n    }\r\n    if (e.target.name === 'unit_cost' || e.target.name === 'qty') {\r\n      tableData[idx].total_cost = this.calculateTotalCost(\r\n        tableData[idx].final_unit_cost,\r\n        tableData[idx].qty,\r\n        tableData[idx].gst,\r\n        tax_type\r\n      );\r\n    }\r\n    const filteredData = [...tableData];\r\n    const total_amount = filteredData.reduce((total, item) => {\r\n      return Number(parseFloat(total) + parseFloat(item.total_cost)).toFixed(2);\r\n    }, 0);\r\n    this.setState({ tableData: filteredData, total_amount: total_amount });\r\n  };\r\n\r\n  calculateSaleProfitPercent = (mrp, sale_price) => {\r\n    const sale_price_to_mrp = Number(mrp - sale_price).toFixed(2);\r\n\r\n    return Number((sale_price_to_mrp * 100) / mrp).toFixed(1);\r\n  };\r\n\r\n  calculateWholeSaleProfitPercent = (mrp, whole_sale_price) => {\r\n    const whole_sale_price_to_mrp = Number(mrp - whole_sale_price).toFixed(2);\r\n\r\n    return Number((whole_sale_price_to_mrp * 100) / mrp).toFixed(1);\r\n  };\r\n\r\n  calculateFinalUnitCost = (unit_cost, discount = 0) => {\r\n    const final_cost = unit_cost - (unit_cost * discount) / 100;\r\n\r\n    return Number(final_cost).toFixed(2);\r\n  };\r\n\r\n  handlePayment = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      if (e.target.name === 'amount_paid') {\r\n        const amount_paid = this.state.amount_paid || 0;\r\n        const amount_repay = Number(\r\n          parseFloat(this.state.total_amount) - parseFloat(amount_paid)\r\n        ).toFixed(2);\r\n        this.setState({\r\n          amount_repay: amount_repay,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleBillSubmit = () => {\r\n    this.props.createBill(\r\n      this.state,\r\n      this.props.party,\r\n      (message) => {\r\n        this.setState({\r\n          tableData: [\r\n            {\r\n              key: uuidv4(),\r\n              product_code: '',\r\n              product_name: '',\r\n              hsn: '',\r\n              image: '',\r\n              ws_margin: '',\r\n              r_margin: '',\r\n              mrp: 0,\r\n              unit_cost: 0,\r\n              discount: 0,\r\n              final_unit_cost: 0,\r\n              unit_cost_with_gst: 0,\r\n              sale_price: 0,\r\n              whole_sale_price: 0,\r\n              sale_price_to_mrp: '',\r\n              whole_sale_price_to_mrp: '',\r\n              gst: 0,\r\n              expiry: new Date(\r\n                new Date().setFullYear(new Date().getFullYear() + 1)\r\n              )\r\n                .toISOString()\r\n                .slice(0, 10),\r\n              mfg: new Date().toISOString().slice(0, 10),\r\n              qty: 0,\r\n              total_cost: 0,\r\n            },\r\n          ],\r\n          payment_mode: '',\r\n          total_amount: 0,\r\n          amount_repay: 0,\r\n          amount_paid: 0,\r\n          discount: '',\r\n          tax_type: EXCLUSIVE_OF_TAX,\r\n          message: message,\r\n        });\r\n      },\r\n      (message) => {\r\n        this.setState({ message: message });\r\n      }\r\n    );\r\n  };\r\n\r\n  searchFixItem = async (productCode) => {\r\n    try {\r\n      const response = await billing.get(\r\n        `/get-fix-item?product_code=${productCode}`\r\n      );\r\n      console.log(response);\r\n      return response.data.item;\r\n    } catch (err) {\r\n      new Promise((resolve, reject) => {\r\n        return reject('Error while fetching item');\r\n      });\r\n    }\r\n  };\r\n\r\n  handleKeyDown = async (e, i) => {\r\n    if (e.key === 'Enter') {\r\n      const { value } = e.target;\r\n      try {\r\n        let item = await this.searchFixItem(value);\r\n        console.log(item);\r\n        const { tableData } = this.state;\r\n        tableData[i].product_code = item.product_code;\r\n        tableData[i].product_name = item.product_name;\r\n        tableData[i].hsn = item.hsn;\r\n        tableData[i].image = item.full_image_path;\r\n        tableData[i].ws_margin = item.ws_margin;\r\n        tableData[i].r_margin = item.r_margin;\r\n        tableData[i].gst = item.gst;\r\n\r\n        const filteredData = [...tableData];\r\n        this.setState({ tableData: filteredData });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { party } = this.props;\r\n    // console.log(this.state.tableRows);\r\n    return (\r\n      <FullLayout>\r\n        <Sidebar key='side-left'>\r\n          <AddParty />\r\n        </Sidebar>\r\n        <div key='side-right'>\r\n          <div>\r\n            <Button onClick={this.setAddItem}>Add Item</Button>\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            {party.name && (\r\n              <>\r\n                <p>\r\n                  <strong>Party</strong>: {party.name}, {'+91' + party.phone}\r\n                </p>\r\n                <p>\r\n                  {party.billing_address}, {party.billing_city}{' '}\r\n                  {party.billing_state} - {party.billing_pincode}\r\n                </p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <main key='main' className='card border-dark'>\r\n          <div class='card-header bg-dark text-light'>\r\n            <label>\r\n              <input\r\n                type='radio'\r\n                checked={this.state.tax_type === INCLUSIVE_OF_TAX}\r\n                onChange={(e) => this.setTaxType(e, INCLUSIVE_OF_TAX)}\r\n              />{' '}\r\n              Inclusive of Tax?\r\n            </label>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <label>\r\n              <input\r\n                type='radio'\r\n                checked={this.state.tax_type === EXCLUSIVE_OF_TAX}\r\n                onChange={(e) => this.setTaxType(e, EXCLUSIVE_OF_TAX)}\r\n              />{' '}\r\n              Exclusive of Tax?\r\n            </label>\r\n          </div>\r\n          <div className='card-body'>\r\n            {this.state.tableData.map((row, i) => (\r\n              <div className='card mb-3' key={row.key}>\r\n                <div className='card-header d-flex justify-content-between bg-info text-light'>\r\n                  <strong className='w-80'>#{i + 1}</strong>\r\n                  <button\r\n                    onClick={() => this.deleteRow(row.key)}\r\n                    className='btn btn-danger btn-sm'\r\n                  >\r\n                    <i class='fa fa-times' aria-hidden='true'></i>\r\n                  </button>\r\n                </div>\r\n                <div className='card-body'>\r\n                  <Row>\r\n                    <Col>\r\n                      {row.image && (\r\n                        <img\r\n                          className='img-thumbnail mx-auto d-block'\r\n                          src={row.image}\r\n                          alt='product'\r\n                          style={{ width: '60%' }}\r\n                        />\r\n                      )}\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>Product Code</label>\r\n                        <input\r\n                          name='product_code'\r\n                          className='form-control form-control-sm'\r\n                          value={row.product_code}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          onKeyDown={(e) => this.handleKeyDown(e, i)}\r\n                          tabIndex={i}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>Product Name</label>\r\n                        <input\r\n                          name='product_name'\r\n                          className='form-control form-control-sm'\r\n                          value={row.product_name}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          readOnly\r\n                          tabIndex='-1'\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>HSN</label>\r\n                        <input\r\n                          name='hsn'\r\n                          className='form-control form-control-sm'\r\n                          value={row.hsn}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          readOnly\r\n                          tabIndex='-1'\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>GST</label>\r\n                        <input\r\n                          name='gst'\r\n                          className='form-control form-control-sm'\r\n                          value={row.gst}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          readOnly\r\n                          tabIndex='-1'\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>Sale Price</label>\r\n                        <input\r\n                          name='sale_price'\r\n                          className='form-control form-control-sm'\r\n                          value={row.sale_price}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          readOnly\r\n                          tabIndex='-1'\r\n                        />\r\n                        <span>\r\n                          {row.sale_price_to_mrp &&\r\n                            (row.sale_price_to_mrp > 0 ? (\r\n                              <span style={{ fontSize: 12, color: 'green' }}>\r\n                                {row.sale_price_to_mrp + '% less than MRP'}\r\n                              </span>\r\n                            ) : (\r\n                              <span style={{ fontSize: 12, color: 'red' }}>\r\n                                {Math.abs(row.sale_price_to_mrp) +\r\n                                  '% more than MRP'}\r\n                              </span>\r\n                            ))}\r\n                        </span>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>Wholesale Price</label>\r\n                        <input\r\n                          name='whole_sale_price'\r\n                          className='form-control form-control-sm'\r\n                          value={row.whole_sale_price}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          readOnly\r\n                          tabIndex='-1'\r\n                        />\r\n                        <span>\r\n                          {row.whole_sale_price_to_mrp &&\r\n                            (row.whole_sale_price_to_mrp > 0 ? (\r\n                              <span style={{ fontSize: 12, color: 'green' }}>\r\n                                {row.whole_sale_price_to_mrp +\r\n                                  '% less than MRP'}\r\n                              </span>\r\n                            ) : (\r\n                              <span style={{ fontSize: 12, color: 'red' }}>\r\n                                {Math.abs(row.whole_sale_price_to_mrp) +\r\n                                  '% more than MRP'}\r\n                              </span>\r\n                            ))}\r\n                        </span>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>Unit Cost</label>\r\n                        <input\r\n                          name='unit_cost'\r\n                          className='form-control form-control-sm'\r\n                          value={row.unit_cost}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          tabIndex={i}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>Discount</label>\r\n                        <input\r\n                          name='discount'\r\n                          className='form-control form-control-sm'\r\n                          value={row.discount}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          tabIndex={i}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>Final Cost</label>\r\n                        <input\r\n                          name='final_unit_cost'\r\n                          className='form-control form-control-sm'\r\n                          value={row.final_unit_cost}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          tabIndex={-1}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>MRP</label>\r\n                        <input\r\n                          name='mrp'\r\n                          className='form-control form-control-sm'\r\n                          value={row.mrp}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          tabIndex={i}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>Qty</label>\r\n                        <input\r\n                          name='qty'\r\n                          className='form-control form-control-sm'\r\n                          value={row.qty}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          tabIndex={i}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <label>Total Cost</label>\r\n                      <div>{row.total_cost}</div>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>MFG date</label>\r\n                        <input\r\n                          type='date'\r\n                          name='mfg'\r\n                          className='form-control form-control-sm'\r\n                          placeholder='YYYY-mm-dd'\r\n                          value={row.mfg}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          tabIndex={i}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup>\r\n                        <label>Expiry</label>\r\n                        <input\r\n                          type='date'\r\n                          name='expiry'\r\n                          className='form-control form-control-sm'\r\n                          placeholder='YYYY-mm-dd'\r\n                          value={row.expiry}\r\n                          onChange={(e) => this.handleInput(e, i)}\r\n                          tabIndex={i}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            {/* <Table\r\n              style={{ tableLayout: \"fixed\", width: \"100%\" }}\r\n              bordered\r\n              striped\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>Action</th>\r\n                  <th>Product Code</th>\r\n                  <th>Product Name</th>\r\n                  <th>HSN</th>\r\n                  <th>MRP</th>\r\n                  <th>Unit Cost</th>\r\n                  <th>Discount</th>\r\n                  <th>Sale Price</th>\r\n                  <th>GST</th>\r\n                  <th>Mfg</th>\r\n                  <th>Expiry</th>\r\n                  <th>Qty</th>\r\n                  <th>Total Cost</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.tableData.map((row, i) => (\r\n                  <tr key={row.key}>\r\n                    <td>\r\n                      <button\r\n                        onClick={() => this.deleteRow(i)}\r\n                        className=\"btn btn-danger btn-sm\"\r\n                      >\r\n                        x\r\n                      </button>\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        name=\"product_code\"\r\n                        className=\"form-control input-sm\"\r\n                        value={row.product_code}\r\n                        onChange={(e) => this.handleInput(e, i)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        name=\"product_name\"\r\n                        className=\"form-control input-sm\"\r\n                        value={row.product_name}\r\n                        onChange={(e) => this.handleInput(e, i)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        name=\"hsn\"\r\n                        className=\"form-control input-sm\"\r\n                        value={row.hsn}\r\n                        onChange={(e) => this.handleInput(e, i)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        name=\"mrp\"\r\n                        className=\"form-control input-sm\"\r\n                        value={row.mrp}\r\n                        onChange={(e) => this.handleInput(e, i)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        name=\"unit_cost\"\r\n                        className=\"form-control input-sm\"\r\n                        value={row.unit_cost}\r\n                        onChange={(e) => this.handleInput(e, i)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        name=\"discount\"\r\n                        className=\"form-control input-sm\"\r\n                        value={row.discount}\r\n                        onChange={(e) => this.handleInput(e, i)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        name=\"sale_price\"\r\n                        className=\"form-control input-sm\"\r\n                        value={row.sale_price}\r\n                        onChange={(e) => this.handleInput(e, i)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        name=\"gst\"\r\n                        className=\"form-control input-sm\"\r\n                        value={row.gst}\r\n                        onChange={(e) => this.handleInput(e, i)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"mfg\"\r\n                        className=\"form-control input-sm\"\r\n                        placeholder=\"YYYY-mm-dd\"\r\n                        value={row.mfg}\r\n                        onChange={(e) => this.handleInput(e, i)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"date\"\r\n                        name=\"expiry\"\r\n                        className=\"form-control input-sm\"\r\n                        placeholder=\"YYYY-mm-dd\"\r\n                        value={row.expiry}\r\n                        onChange={(e) => this.handleInput(e, i)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        name=\"qty\"\r\n                        className=\"form-control input-sm\"\r\n                        value={row.qty}\r\n                        onChange={(e) => this.handleInput(e, i)}\r\n                      />\r\n                    </td>\r\n                    <td>{row.total_cost}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table> */}\r\n            <hr />\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  onClick={this.addRow}\r\n                  color='info'\r\n                  className='mb-3'\r\n                  size='sm'\r\n                >\r\n                  Add New Row\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Label for='mode_of_payment'>Payment Mode</Label>\r\n                <Input\r\n                  type='select'\r\n                  id='mode_of_payment'\r\n                  name='payment_mode'\r\n                  onChange={this.handlePayment}\r\n                >\r\n                  <option value=''>Select Payment</option>\r\n                  <option value='cash'>Cash Payment</option>\r\n                  <option value='bank'>Bank Payment</option>\r\n                </Input>\r\n              </Col>\r\n              <Col>\r\n                <Label for='total_amount'>Total Amount</Label>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType='prepend'>\r\n                    <InputGroupText>Rs</InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    id='total_amount'\r\n                    name='total_amount'\r\n                    value={this.state.total_amount}\r\n                    onChange={this.handlePayment}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              {/* <Col>\r\n                <Label for='amount_repay'>Amount Repay</Label>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType='prepend'>\r\n                    <InputGroupText>Rs</InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    id='amount_repay'\r\n                    name='amount_repay'\r\n                    value={this.state.amount_repay}\r\n                    onChange={this.handlePayment}\r\n                  />\r\n                </InputGroup>\r\n              </Col> */}\r\n              <Col>\r\n                <Label for='amount_paid'>Amount Paid</Label>\r\n                <InputGroup>\r\n                  <InputGroupAddon addonType='prepend'>\r\n                    <InputGroupText>Rs</InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    id='amount_paid'\r\n                    name='amount_paid'\r\n                    value={this.state.amount_paid}\r\n                    onChange={this.handlePayment}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            {/* <Row>\r\n              <Col sm='3'>\r\n                <Label for='discount_or_offers'>Discount/Offers</Label>\r\n                <Input\r\n                  type='select'\r\n                  id='discount_or_offers'\r\n                  name='discount'\r\n                  onChange={this.handlePayment}\r\n                >\r\n                  <option value=''>Select Discount/Offers</option>\r\n                  <option value='discount'>Discount</option>\r\n                  <option value='offer'>Offer</option>\r\n                </Input>\r\n              </Col>\r\n            </Row> */}\r\n            <Button\r\n              color='success'\r\n              className='mt-3'\r\n              size='sm'\r\n              onClick={this.handleBillSubmit}\r\n            >\r\n              Continue To Bill\r\n            </Button>\r\n            <span\r\n              style={{\r\n                color: this.state.message.messageColor,\r\n                fontSize: '12px;',\r\n              }}\r\n              className='ml-3'\r\n            >\r\n              {this.state.message.bodyMessage[0]}\r\n            </span>\r\n          </div>\r\n          <AddItemModal isOpen={this.state.addItem} toggle={this.setAddItem} />\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { party: state.party };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createBill })(CreateBill);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './InvoicePdf.module.css';\r\nimport { showInvoice } from '../../actions/index';\r\n\r\nclass InvoicePdf extends Component {\r\n  componentDidMount() {\r\n    this.props.showInvoice(this.props.match.params.id);\r\n  }\r\n\r\n  showDateFromTimeStamp = (dateTime) => {\r\n    return new Date(dateTime).toISOString().slice(0, 10);\r\n  };\r\n\r\n  render() {\r\n    const { sale } = this.props;\r\n    const { customer, items } = sale;\r\n    console.log(customer);\r\n    return (\r\n      <div className='w-100'>\r\n        <div className='col-12'>\r\n          <Link to='/' className='non-printable'>\r\n            {`<<`} Go to Create Invoice\r\n          </Link>\r\n          <div className='card'>\r\n            <div className='card-body'>\r\n              <h3 className='text-center font-weight-bold mb-1'>\r\n                Incl. of Taxes\r\n              </h3>\r\n              <hr />\r\n              <p className='text-center font-weight-bold mb-0'>\r\n                Ardh Sainik Canteen\r\n              </p>\r\n              <p className='text-center small font-weight-bold mb-0'>\r\n                Karam Singh, Budhi Rd, Barnoti, Kathua - J&amp;K\r\n              </p>\r\n              <p className='text-center small font-weight-bold mb-0'>\r\n                GSTIN No.: 01DRSPP8834F1ZE\r\n              </p>\r\n              <div className='row pb-2 p-2'>\r\n                <div className='col-md-12 sides'>\r\n                  <p className='mb-0'>\r\n                    <span\r\n                      style={{\r\n                        width: '50%',\r\n                        display: 'inline-block',\r\n                        textAlign: 'left',\r\n                      }}\r\n                    >\r\n                      <strong>No.</strong>:{' '}\r\n                      <small className='small'>IN00{sale.id}</small>\r\n                    </span>\r\n                    <span\r\n                      style={{\r\n                        width: '50%',\r\n                        display: 'inline-block',\r\n                        textAlign: 'right',\r\n                      }}\r\n                    >\r\n                      <strong>Date</strong>:{' '}\r\n                      <small className='small'>\r\n                        {sale.created_at &&\r\n                          this.showDateFromTimeStamp(sale.created_at)}\r\n                      </small>\r\n                    </span>\r\n                  </p>\r\n                  <p className='mb-0'>\r\n                    <strong>Name</strong>:{' '}\r\n                    <small className='small'>\r\n                      {customer.name}, +91{customer.phone}\r\n                    </small>\r\n                  </p>\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-6 sides text-right\">\r\n                  <p className=\"mb-1\">\r\n                    <strong>Date</strong>:{\" \"}\r\n                    <small className=\"small\">{sale.created_at}</small>\r\n                  </p>\r\n                </div> */}\r\n              </div>\r\n              <div className='table-responsive'>\r\n                <table className='table table-bordered mb-0'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th className='text-uppercase small font-weight-bold non-printable'>\r\n                        SNo.\r\n                      </th>\r\n                      <th className='text-uppercase small font-weight-bold'>\r\n                        Item\r\n                      </th>\r\n                      <th className='text-uppercase small font-weight-bold'>\r\n                        Qty\r\n                      </th>\r\n                      <th className='text-uppercase small font-weight-bold'>\r\n                        MRP\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          (Rs)\r\n                        </span>\r\n                      </th>\r\n                      <th className='text-uppercase small font-weight-bold'>\r\n                        Sale Price\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          (Rs)\r\n                        </span>\r\n                      </th>\r\n                      <th className='text-uppercase small font-weight-bold'>\r\n                        Tax %\r\n                      </th>\r\n                      <th className='text-uppercase small font-weight-bold'>\r\n                        Total\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          (Rs)\r\n                        </span>\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {items &&\r\n                      items.map((item, idx) => (\r\n                        <tr key={item.id}>\r\n                          <td className='non-printable'>{idx + 1}</td>\r\n                          <td>{item.product_name}</td>\r\n                          <td>{item.pivot.qty}</td>\r\n                          <td>{item.mrp}</td>\r\n                          <td>{item.sale_price}</td>\r\n                          <td>{item.gst}</td>\r\n                          <td>{item.pivot.price}</td>\r\n                        </tr>\r\n                      ))}\r\n                  </tbody>\r\n                  <tfoot className='font-weight-bold'>\r\n                    <tr>\r\n                      <td className='non-printable'></td>\r\n                      <td colSpan='5'>Total Amount</td>\r\n                      <td>{'Rs ' + sale.total_amount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='non-printable'></td>\r\n                      <td colSpan='5'>Payment Mode</td>\r\n                      <td className='text-uppercase'>\r\n                        {sale.payment_mode || 'No Payment'}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='non-printable'></td>\r\n                      <td colSpan='5' className='small'>\r\n                        You have saved\r\n                      </td>\r\n                      <td className='font-weight-bold'>\r\n                        {items &&\r\n                          'Rs ' +\r\n                            Number(\r\n                              items.reduce(\r\n                                (total, item) =>\r\n                                  total +\r\n                                  item.mrp * item.pivot.qty -\r\n                                  item.sale_price * item.pivot.qty,\r\n                                0\r\n                              )\r\n                            ).toFixed(2)}\r\n                      </td>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n              </div>\r\n              <p className='font-weight-bold small mt-3 mb-1'>\r\n                Terms &amp; Conditions\r\n              </p>\r\n              <p className='mb-5 mt-0 small'>\r\n                Items once sold. No Refund. No Exchange.\r\n              </p>\r\n              <p className='font-weight-bold small mt-3 text-center'>\r\n                Thanks! for supporting\r\n              </p>\r\n              <p className='font-weight-bold small mb-0 text-center'>\r\n                Paramilitary Forces nation first for us.\r\n              </p>\r\n              <p className='font-weight-bold small mb-0 text-center'>\r\n                Initiative of Ardh Sainik Canteen (Regd.)\r\n              </p>\r\n              <p className='font-weight-bold small mb-0 text-center'>\r\n                Phone: +91 6005133875\r\n              </p>\r\n              <p className='font-weight-bold small mb-0 text-center'>\r\n                || Jai Hind ||\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { sale: state.sale };\r\n};\r\n\r\nexport default connect(mapStateToProps, { showInvoice })(InvoicePdf);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Alert,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport billing from '../../api/billing';\r\nimport FullLayout from '../Layouts/FullLayout';\r\nimport requireAuth from '../../helpers/requireAuth';\r\nimport { connect } from 'react-redux';\r\n\r\nclass DailyPurchase extends Component {\r\n  state = {\r\n    purchases: [],\r\n    fromDate: new Date().toISOString().slice(0, 10),\r\n    toDate: new Date().toISOString().slice(0, 10),\r\n    isLoading: false,\r\n    error: '',\r\n  };\r\n\r\n  onAlertDismiss = () => {\r\n    this.setState({ error: '' });\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true });\r\n    try {\r\n      const response = await billing.get('daily-purchase');\r\n      this.setState({ purchases: response.data.purchases, isLoading: false });\r\n    } catch (err) {\r\n      this.setState({ error: err.response.data.error, isLoading: false });\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: new Date(e.target.value).toISOString().slice(0, 10),\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let { fromDate, toDate } = this.state;\r\n    this.setState({ isLoading: true });\r\n    try {\r\n      const response = await billing.get('daily-purchase', {\r\n        params: {\r\n          from: fromDate,\r\n          to: toDate,\r\n        },\r\n      });\r\n      this.setState({ purchases: response.data.purchases, isLoading: false });\r\n    } catch (err) {\r\n      this.setState({ error: err.response.data.error, isLoading: false });\r\n    }\r\n  };\r\n\r\n  handleCancelBill = async (e, id) => {\r\n    const { purchases } = this.state;\r\n    try {\r\n      await billing.put(`cancel-bill/${id}`);\r\n      const updatedPurchases = purchases.filter(\r\n        (purchase) => purchase.id !== id\r\n      );\r\n      this.setState({ purchases: updatedPurchases });\r\n    } catch (err) {\r\n      this.setState({ error: err.response.data.error });\r\n    }\r\n  };\r\n\r\n  renderTableBody = () => {\r\n    const { purchases, isLoading } = this.state;\r\n    const { auth } = this.props;\r\n    if (isLoading)\r\n      return (\r\n        <Spinner\r\n          color='dark'\r\n          style={{ display: 'flex', justifyContent: 'center' }}\r\n        />\r\n      );\r\n    return (\r\n      <>\r\n        <tbody>\r\n          {purchases.length > 0 ? (\r\n            purchases.map((purchase, idx) => (\r\n              <tr key={purchase.id}>\r\n                <td>{idx + 1}</td>\r\n                <td>\r\n                  <Link to={`/bill/${purchase.id}`}>\r\n                    {'BI00' + purchase.id}\r\n                  </Link>\r\n                </td>\r\n                <td>{purchase.party.name}</td>\r\n                <td>{purchase.payment_mode}</td>\r\n                <td>{purchase.total_amount}</td>\r\n                {auth.permission && auth.permission.name === 'all' && (\r\n                  <td>\r\n                    <Button\r\n                      color='danger'\r\n                      onClick={(e) => this.handleCancelBill(e, purchase.id)}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan='6' className='text-center'>\r\n                No Purchase\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        {purchases.length > 0 ? (\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan='4'>Total</th>\r\n              <th>\r\n                {Number(\r\n                  purchases.reduce(\r\n                    (total, purchase) => total + purchase.total_amount,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { fromDate, toDate } = this.state;\r\n    const { auth } = this.props;\r\n    return (\r\n      <FullLayout>\r\n        <aside key='sidebar'>\r\n          <h1>Daily Purchase Report</h1>\r\n        </aside>\r\n        <main key='main' className='card'>\r\n          <div className='card-body'>\r\n            <Form className='mb-3' onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for='fromDate'>From</Label>\r\n                    <Input\r\n                      type='date'\r\n                      name='fromDate'\r\n                      id='fromDate'\r\n                      value={fromDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{' '}\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for='toDate'>To</Label>\r\n                    <Input\r\n                      type='date'\r\n                      name='toDate'\r\n                      id='toDate'\r\n                      value={toDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{' '}\r\n                </Col>\r\n                <Button hidden>Search</Button>\r\n              </Row>\r\n              <Button>Search</Button>\r\n            </Form>\r\n            <Alert\r\n              color='danger'\r\n              isOpen={this.state.error}\r\n              toggle={this.onAlertDismiss}\r\n            >\r\n              {this.state.error}\r\n            </Alert>\r\n            <Table bordered striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>SNo.</th>\r\n                  <th>Bill #</th>\r\n                  <th>Party</th>\r\n                  <th>Payment Mode</th>\r\n                  <th>Total Amount</th>\r\n                  {auth.permission && auth.permission.name === 'all' && (\r\n                    <th>Action</th>\r\n                  )}\r\n                </tr>\r\n              </thead>\r\n              {this.renderTableBody()}\r\n            </Table>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { auth: state.auth.authenticated };\r\n};\r\n\r\nexport default connect(mapStateToProps)(requireAuth(DailyPurchase));\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Alert,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport billing from \"../../api/billing\";\r\nimport { connect } from \"react-redux\";\r\nimport FullLayout from \"../Layouts/FullLayout\";\r\nimport requireAuth from \"../../helpers/requireAuth\";\r\n\r\nclass DailySale extends Component {\r\n  state = {\r\n    sales: [],\r\n    fromDate: new Date().toISOString().slice(0, 10),\r\n    toDate: new Date().toISOString().slice(0, 10),\r\n    isLoading: false,\r\n    error: \"\",\r\n  };\r\n\r\n  onAlertDismiss = () => {\r\n    this.setState({ error: \"\" });\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true });\r\n    try {\r\n      const response = await billing.get(\"daily-sale\");\r\n      this.setState({ sales: response.data.sales, isLoading: false });\r\n    } catch (err) {\r\n      this.setState({ error: err.response.data.error, isLoading: false });\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: new Date(e.target.value).toISOString().slice(0, 10),\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let { fromDate, toDate } = this.state;\r\n    this.setState({ isLoading: true });\r\n    try {\r\n      const response = await billing.get(\"daily-sale\", {\r\n        params: {\r\n          from: fromDate,\r\n          to: toDate,\r\n        },\r\n      });\r\n      this.setState({ sales: response.data.sales, isLoading: false });\r\n    } catch (err) {\r\n      this.setState({ error: err.response.data.error, isLoading: false });\r\n    }\r\n  };\r\n\r\n  handleCancelInvoice = async (e, id) => {\r\n    const { sales } = this.state;\r\n    try {\r\n      await billing.put(`cancel-invoice/${id}`);\r\n      const updatedSales = sales.filter((sale) => sale.id !== id);\r\n      this.setState({ sales: updatedSales });\r\n    } catch (err) {\r\n      this.setState({ error: err.response.data.error, isLoading: false });\r\n    }\r\n  };\r\n\r\n  renderTableBody = () => {\r\n    const { sales, isLoading } = this.state;\r\n    const { auth } = this.props;\r\n    if (isLoading)\r\n      return (\r\n        <Spinner\r\n          color=\"dark\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        />\r\n      );\r\n    return (\r\n      <>\r\n        <tbody>\r\n          {sales.length > 0 ? (\r\n            sales.map((sale, idx) => (\r\n              <tr key={sale.id}>\r\n                <td>{idx + 1}</td>\r\n                <td>\r\n                  <Link to={`/invoice/${sale.id}`}>{\"IN00\" + sale.id}</Link>\r\n                </td>\r\n                <td>{sale.customer.name}</td>\r\n                <td>{sale.payment_mode}</td>\r\n                <td>{sale.total_amount}</td>\r\n                {auth.permission && auth.permission.name === \"all\" && (\r\n                  <td>\r\n                    <Button\r\n                      color=\"danger\"\r\n                      onClick={(e) => this.handleCancelInvoice(e, sale.id)}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"6\" className=\"text-center\">\r\n                No Sale\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        {sales.length > 0 ? (\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan=\"4\">Total</th>\r\n              <th>\r\n                {Number(\r\n                  sales.reduce((total, sale) => total + sale.total_amount, 0)\r\n                ).toFixed(2)}\r\n              </th>\r\n              {auth.permission && auth.permission.name === \"all\" && <th></th>}\r\n            </tr>\r\n          </tfoot>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { fromDate, toDate } = this.state;\r\n    const { auth } = this.props;\r\n    return (\r\n      <FullLayout>\r\n        <aside key=\"sidebar\">\r\n          <h1>Daily Sale Report</h1>\r\n        </aside>\r\n        <main key=\"main\" className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form className=\"mb-3\" onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"fromDate\">From</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"fromDate\"\r\n                      id=\"fromDate\"\r\n                      value={fromDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{\" \"}\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"toDate\">To</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"toDate\"\r\n                      id=\"toDate\"\r\n                      value={toDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{\" \"}\r\n                </Col>\r\n              </Row>\r\n              <Button>Search</Button>\r\n            </Form>\r\n            <Alert\r\n              color=\"danger\"\r\n              isOpen={this.state.error}\r\n              toggle={this.onAlertDismiss}\r\n            >\r\n              {this.state.error}\r\n            </Alert>\r\n            <Table bordered striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>SNo.</th>\r\n                  <th>Invoice #</th>\r\n                  <th>Customer</th>\r\n                  <th>Payment Mode</th>\r\n                  <th>Total Amount</th>\r\n                  {auth.permission && auth.permission.name === \"all\" && (\r\n                    <th>Action</th>\r\n                  )}\r\n                </tr>\r\n              </thead>\r\n              {this.renderTableBody()}\r\n            </Table>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { auth: state.auth.authenticated };\r\n};\r\n\r\nexport default connect(mapStateToProps)(requireAuth(DailySale));\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport billing from \"../../api/billing\";\r\nimport FullLayout from \"../Layouts/FullLayout\";\r\nimport requireAuth from \"../../helpers/requireAuth\";\r\n\r\nclass SaleProfit extends Component {\r\n  state = {\r\n    sales: [],\r\n    fromDate: new Date().toISOString().slice(0, 10),\r\n    toDate: new Date().toISOString().slice(0, 10),\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true });\r\n    const response = await billing.get(\"sale-profit\");\r\n    this.setState({ sales: response.data.sales, isLoading: false });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: new Date(e.target.value).toISOString().slice(0, 10),\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let { fromDate, toDate } = this.state;\r\n    this.setState({ isLoading: true });\r\n    const response = await billing.get(\"sale-profit\", {\r\n      params: {\r\n        from: fromDate,\r\n        to: toDate,\r\n      },\r\n    });\r\n    this.setState({ sales: response.data.sales, isLoading: false });\r\n  };\r\n\r\n  renderTableBody = () => {\r\n    const { sales, isLoading } = this.state;\r\n    if (isLoading)\r\n      return (\r\n        <Spinner\r\n          color=\"dark\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        />\r\n      );\r\n    return (\r\n      <>\r\n        <tbody>\r\n          {sales.length > 0 ? (\r\n            sales.map((sale, idx) => (\r\n              <tr key={sale.id}>\r\n                <td>{idx + 1}</td>\r\n                <td>\r\n                  <Link to={`/invoice/${sale.id}`}>{\"IN00\" + sale.id}</Link>\r\n                </td>\r\n                <td>{Number(sale.total_amount).toFixed(2)}</td>\r\n                <td>{Number(sale.profit).toFixed(2)}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"5\" className=\"text-center\">\r\n                No Sale\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        {sales.length > 0 ? (\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan=\"2\">Total</th>\r\n              <th>\r\n                {Number(\r\n                  sales.reduce((total, sale) => total + sale.profit, 0)\r\n                ).toFixed(2)}\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { fromDate, toDate } = this.state;\r\n    return (\r\n      <FullLayout>\r\n        <aside key=\"sidebar\">\r\n          <h1>Daily Sale Report</h1>\r\n        </aside>\r\n        <main key=\"main\" className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form className=\"mb-3\" onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"fromDate\">From</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"fromDate\"\r\n                      id=\"fromDate\"\r\n                      value={fromDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{\" \"}\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"toDate\">To</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"toDate\"\r\n                      id=\"toDate\"\r\n                      value={toDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{\" \"}\r\n                </Col>\r\n                <Button hidden>Search</Button>\r\n              </Row>\r\n              <Button>Search</Button>\r\n            </Form>\r\n            <Table bordered striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>SNo.</th>\r\n                  <th>Invoice #</th>\r\n                  <th>Invoice Total</th>\r\n                  <th>Total Profit</th>\r\n                </tr>\r\n              </thead>\r\n              {this.renderTableBody()}\r\n            </Table>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default requireAuth(SaleProfit);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Spinner } from \"reactstrap\";\r\nimport billing from \"../../api/billing\";\r\nimport FullLayout from \"../Layouts/FullLayout\";\r\n\r\nclass CustomerList extends Component {\r\n  state = {\r\n    customers: [],\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true });\r\n    const response = await billing.get(\"customers\");\r\n    this.setState({ customers: response.data.customers, isLoading: false });\r\n  };\r\n\r\n  renderTableBody = () => {\r\n    const { customers, isLoading } = this.state;\r\n    if (isLoading)\r\n      return (\r\n        <Spinner\r\n          color=\"dark\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        />\r\n      );\r\n    return (\r\n      <>\r\n        <tbody>\r\n          {customers.length > 0 ? (\r\n            customers.map((customer, idx) => (\r\n              <tr key={customer.id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{customer.name}</td>\r\n                <td>\r\n                  <Link to={`customer/${customer.phone}`}>\r\n                    {customer.phone}\r\n                  </Link>\r\n                </td>\r\n                <td>{Number(customer.paid_total).toFixed(2)}</td>\r\n                <td>{Number(customer.credit_total).toFixed(2)}</td>\r\n                <td>\r\n                  <Link to={`/customers/${customer.id}`}>\r\n                    All Invoices{\" \"}\r\n                    <span style={{ fontSize: 12 }}>\r\n                      ({customer.sales.length || 0})\r\n                    </span>\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"6\" className=\"text-center\">\r\n                No Customer\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FullLayout>\r\n        <aside key=\"sidebar\">\r\n          <h1>Customer List</h1>\r\n        </aside>\r\n        <main key=\"main\" className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Table bordered striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>SNo.</th>\r\n                  <th>Name</th>\r\n                  <th>Phone</th>\r\n                  <th>Total Paid</th>\r\n                  <th>Total Credit</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              {this.renderTableBody()}\r\n            </Table>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerList;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Input, Row, Col, Label } from \"reactstrap\";\r\nimport billing from \"../../api/billing\";\r\nimport FullLayout from \"../Layouts/FullLayout\";\r\n\r\nexport default class EditCustomer extends Component {\r\n  state = {\r\n    customer: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const phone = this.props.match.params.phone;\r\n    const response = await billing.post(\"search-customer\", {\r\n      phone,\r\n    });\r\n\r\n    this.setState({ customer: response.data.searched_customer });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      customer: { ...this.state.customer, [e.target.name]: e.target.value },\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { customer } = this.state;\r\n    const response = await billing.put(`update-customer/${customer.id}`, {\r\n      name: customer.name,\r\n      billing_address: customer.billing_address,\r\n      billing_city: customer.billing_city,\r\n      billing_state: customer.billing_state,\r\n      billing_pincode: customer.billing_pincode,\r\n    });\r\n    this.props.history.push(\"/customers\");\r\n    // this.setState({ customer: response.data.selected_customer });\r\n  };\r\n\r\n  render() {\r\n    const { customer } = this.state;\r\n    return (\r\n      <FullLayout>\r\n        <aside key=\"sidebar\">\r\n          <h1>Edit Customer</h1>\r\n        </aside>\r\n        <main key=\"main\" className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"phone\">Phone</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"phone\"\r\n                      value={customer && customer.phone}\r\n                      readOnly\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"name\">Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      onChange={this.handleChange}\r\n                      value={customer && customer.name}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"address\">Address</Label>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"billing_address\"\r\n                  onChange={this.handleChange}\r\n                  value={customer && customer.billing_address}\r\n                />\r\n              </FormGroup>\r\n              <Row form>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"city\">City</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"billing_city\"\r\n                      onChange={this.handleChange}\r\n                      value={customer && customer.billing_city}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"state\">State</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"billing_state\"\r\n                      onChange={this.handleChange}\r\n                      value={customer && customer.billing_state}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"pincode\">Pincode</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"billing_pincode\"\r\n                      onChange={this.handleChange}\r\n                      value={customer && customer.billing_pincode}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"card\">Card Id</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"card\"\r\n                      onChange={this.handleChange}\r\n                      value={customer && customer.card}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Button color=\"success\" size=\"sm\">\r\n                Update Customer\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport billing from \"../../api/billing\";\r\nimport FullLayout from \"../Layouts/FullLayout\";\r\n\r\nclass Expense extends Component {\r\n  state = {\r\n    expenses: [],\r\n    amount: \"\",\r\n    type: \"\",\r\n    date: \"\",\r\n    description: \"\",\r\n    fromDate: new Date().toISOString().slice(0, 10),\r\n    toDate: new Date().toISOString().slice(0, 10),\r\n    isEditing: false,\r\n    editingId: \"\",\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true });\r\n    const response = await billing.get(\"expenses\");\r\n    this.setState({ expenses: response.data.expenses, isLoading: false });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let { name, value } = e.target;\r\n    if (name === \"date\") {\r\n      value = new Date(value).toISOString().slice(0, 10);\r\n    }\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleCancelExpense = async (e, id) => {\r\n    const { expenses } = this.state;\r\n\r\n    await billing.put(`cancel-expense/${id}`);\r\n    const updatedExpenses = expenses.filter((expense) => expense.id !== id);\r\n    this.setState({ sales: updatedExpenses });\r\n  };\r\n\r\n  // handleSubmit = async (e) => {\r\n  //   e.preventDefault();\r\n  //   let { fromDate, toDate } = this.state;\r\n  //   const response = await billing.get(\"expenses\", {\r\n  //     from: fromDate,\r\n  //     to: toDate,\r\n  //   });\r\n  //   this.setState({ expenses: response.data.expenses });\r\n  // };\r\n\r\n  handleEditClick = (e, id) => {\r\n    e.preventDefault();\r\n    const { expenses } = this.state;\r\n    const foundExpense = expenses.find((expense) => expense.id === id);\r\n    this.setState({\r\n      amount: foundExpense.amount,\r\n      type: foundExpense.type,\r\n      date: foundExpense.date,\r\n      description: foundExpense.description,\r\n      isEditing: true,\r\n      editingId: id,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      amount,\r\n      type,\r\n      date,\r\n      description,\r\n      isEditing,\r\n      editingId,\r\n    } = this.state;\r\n    const url = isEditing ? `edit-expense/${editingId}` : \"create-expense\";\r\n    try {\r\n      await billing.post(url, {\r\n        amount,\r\n        type,\r\n        date,\r\n        description,\r\n      });\r\n      const response = await billing.get(\"expenses\");\r\n      this.setState({\r\n        expenses: response.data.expenses,\r\n        amount: \"\",\r\n        type: \"\",\r\n        date: \"\",\r\n        description: \"\",\r\n        isEditing: false,\r\n        editingId: \"\",\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  renderTableBody = () => {\r\n    const { expenses, isLoading } = this.state;\r\n    const { auth } = this.props;\r\n    if (isLoading)\r\n      return (\r\n        <Spinner\r\n          color=\"dark\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        />\r\n      );\r\n    return (\r\n      <>\r\n        <tbody>\r\n          {expenses.length > 0 ? (\r\n            expenses.map((expense, idx) => (\r\n              <tr key={expense.id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{expense.date}</td>\r\n                <td>{expense.type}</td>\r\n                <td>{expense.amount}</td>\r\n                {auth.permission.name === \"all\" && (\r\n                  <td>\r\n                    <Button\r\n                      color=\"danger\"\r\n                      onClick={(e) => this.handleCancelExpense(e, expense.id)}\r\n                    >\r\n                      Cancel\r\n                    </Button>{\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={(e) => this.handleEditClick(e, expense.id)}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"5\" className=\"text-center\">\r\n                No Expense\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        {expenses.length > 0 ? (\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan=\"3\">Total</th>\r\n              <th>\r\n                {Number(\r\n                  expenses.reduce((total, expense) => total + expense.amount, 0)\r\n                ).toFixed(2)}\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { amount, date, type, description } = this.state;\r\n    const { auth } = this.props;\r\n    return (\r\n      <FullLayout>\r\n        <aside key=\"sidebar\">\r\n          <h1>Expense Report</h1>\r\n        </aside>\r\n        <main key=\"main\">\r\n          <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n              <Form className=\"mb-3\" onSubmit={this.handleSubmit}>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"amount\">Amount</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"amount\"\r\n                        id=\"amount\"\r\n                        value={amount}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>{\" \"}\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"date\">Date</Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"date\"\r\n                        id=\"date\"\r\n                        value={date}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>{\" \"}\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"type\">Type</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"type\"\r\n                        id=\"type\"\r\n                        value={type}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>{\" \"}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"description\">Description</Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        value={description}\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </FormGroup>{\" \"}\r\n                  </Col>\r\n                </Row>\r\n                <Button>{this.state.isEditing ? \"Update\" : \"Submit\"}</Button>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              {/* <Form className=\"mb-3\" onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"fromDate\">From</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"fromDate\"\r\n                      id=\"fromDate\"\r\n                      value={fromDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{\" \"}\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"toDate\">To</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"toDate\"\r\n                      id=\"toDate\"\r\n                      value={toDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{\" \"}\r\n                </Col>\r\n                <Button hidden>Search</Button>\r\n              </Row>\r\n              <Button>Search</Button>\r\n            </Form> */}\r\n              <Table bordered striped>\r\n                <thead>\r\n                  <tr>\r\n                    <th>SNo.</th>\r\n                    <th>Date</th>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    {auth.permission.name === \"all\" && <th>Action</th>}\r\n                  </tr>\r\n                </thead>\r\n                {this.renderTableBody()}\r\n              </Table>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { auth: state.auth.authenticated };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Expense);\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Alert,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport billing from '../../api/billing';\r\nimport FullLayout from '../Layouts/FullLayout';\r\nimport requireAuth from '../../helpers/requireAuth';\r\n\r\nclass StockSummary extends Component {\r\n  state = {\r\n    items: [],\r\n    fromDate: new Date().toISOString().slice(0, 10),\r\n    toDate: new Date().toISOString().slice(0, 10),\r\n    isLoading: false,\r\n    error: '',\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true });\r\n    const response = await billing.get('stock-summary');\r\n    this.setState({ items: response.data.items, isLoading: false });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: new Date(e.target.value).toISOString().slice(0, 10),\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let { fromDate, toDate } = this.state;\r\n    this.setState({ isLoading: true });\r\n    try {\r\n      const response = await billing.get('stock-summary', {\r\n        params: {\r\n          from: fromDate,\r\n          to: toDate,\r\n        },\r\n      });\r\n      this.setState({ items: response.data.items });\r\n    } catch (err) {\r\n      this.setState({ error: err.response.data.error });\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  renderTableBody = () => {\r\n    const { items, isLoading } = this.state;\r\n    if (isLoading)\r\n      return (\r\n        <Spinner\r\n          color='dark'\r\n          style={{ display: 'flex', justifyContent: 'center' }}\r\n        />\r\n      );\r\n    return (\r\n      <>\r\n        <tbody>\r\n          {items.length > 0 ? (\r\n            items.map((item, idx) => (\r\n              <tr key={item.id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{item.product_name}</td>\r\n                <td>{item.unit_cost}</td>\r\n                <td>{item.qty}</td>\r\n                <td>{item.rem_qty}</td>\r\n                <td>{Number(item.rem_qty * item.unit_cost).toFixed(2)}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan='6' className='text-center'>\r\n                No Item\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        {items.length > 0 ? (\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan='5'>Total</th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce(\r\n                    (total, item) => total + item.rem_qty * item.unit_cost,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { fromDate, toDate } = this.state;\r\n    return (\r\n      <FullLayout>\r\n        <aside key='sidebar'>\r\n          <h1>Stock Summary Report</h1>\r\n        </aside>\r\n        <main key='main' className='card'>\r\n          <div className='card-body'>\r\n            <Form className='mb-3' onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for='fromDate'>From</Label>\r\n                    <Input\r\n                      type='date'\r\n                      name='fromDate'\r\n                      id='fromDate'\r\n                      value={fromDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{' '}\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for='toDate'>To</Label>\r\n                    <Input\r\n                      type='date'\r\n                      name='toDate'\r\n                      id='toDate'\r\n                      value={toDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{' '}\r\n                </Col>\r\n                <Button hidden>Search</Button>\r\n              </Row>\r\n              <Button>Search</Button>\r\n            </Form>\r\n            <Table bordered striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>SNo.</th>\r\n                  <th>Item</th>\r\n                  <th>Unit Cost</th>\r\n                  <th>Qty</th>\r\n                  <th>Remaining Qty</th>\r\n                  <th>Value</th>\r\n                </tr>\r\n              </thead>\r\n              {this.renderTableBody()}\r\n            </Table>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default requireAuth(StockSummary);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Table, Input, Button, FormGroup } from 'reactstrap';\r\nimport billing from '../../api/billing';\r\nimport FullLayout from '../Layouts/FullLayout';\r\nimport requireAuth from '../../helpers/requireAuth';\r\n\r\nclass CustomerInvoices extends Component {\r\n  state = {\r\n    customer: {},\r\n    message: '',\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const response = await billing.get(\r\n      `customers/${this.props.match.params.id}`\r\n    );\r\n    this.setState({ customer: response.data.customer });\r\n  };\r\n\r\n  handleChange = (e, i) => {\r\n    const { customer } = this.state;\r\n    customer.sales[i].payment_mode = e.target.value;\r\n    const updatedCustomer = { ...customer };\r\n    this.setState({ customer: updatedCustomer });\r\n  };\r\n\r\n  updatePaymentMode = async (e, i) => {\r\n    const { customer } = this.state;\r\n\r\n    try {\r\n      const response = await billing.post('update-sale-payment-mode', {\r\n        id: customer.sales[i].id,\r\n        payment_mode: customer.sales[i].payment_mode,\r\n      });\r\n      this.setState({ message: response.data.message });\r\n    } catch (err) {\r\n      // console.log(err);\r\n      this.setState({ message: err.response.data.message });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { customer, message } = this.state;\r\n    return (\r\n      <FullLayout>\r\n        <aside key='sidebar'>\r\n          <h1>Customer Invoices</h1>\r\n        </aside>\r\n        <main key='main' className='card'>\r\n          {message && <div>{message}</div>}\r\n          <div className='card-body'>\r\n            <Row>\r\n              <Col>Phone: {customer.phone}</Col>\r\n              <Col>Name: {customer.name}</Col>\r\n              <Col>\r\n                Address:{' '}\r\n                {`${customer.billing_address}, ${customer.billing_city}, ${customer.billing_state} - ${customer.billing_pincode}`}\r\n              </Col>\r\n              <Col>Card: {customer.card}</Col>\r\n              <Col>\r\n                <Link to={`/customer/${customer.phone}`}>\r\n                  Edit Customer Info\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n            <Table bordered striped style={{ marginBottom: 0 }}>\r\n              <thead>\r\n                <tr>\r\n                  <th width='20%'>SNo.</th>\r\n                  <th width='20%'>Invoice No.</th>\r\n                  <th width='20%'>Date</th>\r\n                  <th width='20%'>Total Amount</th>\r\n                  <th width='20%'>Payment Mode</th>\r\n                </tr>\r\n              </thead>\r\n            </Table>\r\n            <div style={{ maxHeight: '45vh', overflowY: 'scroll' }}>\r\n              <Table\r\n                bordered\r\n                striped\r\n                style={{\r\n                  marginBottom: 0,\r\n                }}\r\n              >\r\n                <tbody>\r\n                  {customer.sales && customer.sales.length > 0 ? (\r\n                    customer.sales.map((sale, idx) => (\r\n                      <tr key={sale.id}>\r\n                        <td width='20%'>{idx + 1}</td>\r\n                        <td width='20%'>\r\n                          <Link to={`/invoice/${sale.id}`}>\r\n                            {'00' + sale.id}\r\n                          </Link>\r\n                        </td>\r\n                        <td width='20%'>{sale.created_at}</td>\r\n                        <td width='20%'>{sale.total_amount}</td>\r\n                        <td width='20%'>\r\n                          <FormGroup>\r\n                            <Input\r\n                              type='select'\r\n                              name='select'\r\n                              value={sale.payment_mode}\r\n                              onChange={(e) => this.handleChange(e, idx)}\r\n                            >\r\n                              <option value='cash'>Cash</option>\r\n                              <option value='credit'>Credit</option>\r\n                            </Input>\r\n                          </FormGroup>\r\n                          <Button\r\n                            color='success'\r\n                            onClick={(e) => this.updatePaymentMode(e, idx)}\r\n                            block\r\n                          >\r\n                            Update\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  ) : (\r\n                    <tr>\r\n                      <td colSpan='5' className='text-center'>\r\n                        No Invoice\r\n                      </td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n            <Table bordered striped>\r\n              {customer.sales && customer.sales.length > 0 ? (\r\n                <tfoot>\r\n                  <tr>\r\n                    <th width='60%' colSpan='3'>\r\n                      Total\r\n                    </th>\r\n                    <th width='20%'>\r\n                      {Number(\r\n                        customer.sales.reduce(\r\n                          (total, sale) => total + sale.total_amount,\r\n                          0\r\n                        )\r\n                      ).toFixed(2)}\r\n                    </th>\r\n                    <th width='20%'></th>\r\n                  </tr>\r\n                </tfoot>\r\n              ) : null}\r\n            </Table>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerInvoices;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Spinner,\r\n} from 'reactstrap';\r\nimport billing from '../../api/billing';\r\nimport FullLayout from '../Layouts/FullLayout';\r\n\r\nexport default function MostSoldItems() {\r\n  const [items, setItem] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fromDate, setFromDate] = useState(\r\n    new Date().toISOString().slice(0, 10)\r\n  );\r\n  const [toDate, setToDate] = useState(new Date().toISOString().slice(0, 10));\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function cb() {\r\n      setIsLoading(true);\r\n      const response = await billing.get('most-sold-items');\r\n      setItem(response.data.itemsWithCount);\r\n      setIsLoading(false);\r\n    }\r\n    cb();\r\n  }, []);\r\n\r\n  function renderTableBody() {\r\n    if (isLoading)\r\n      return (\r\n        <Spinner\r\n          color='dark'\r\n          style={{ display: 'flex', justifyContent: 'center' }}\r\n        />\r\n      );\r\n    return (\r\n      <>\r\n        <tbody>\r\n          {items.length > 0 ? (\r\n            items.map((item, idx) => (\r\n              <tr key={item.id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{item.product_name}</td>\r\n                <td>{item.count}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan='4' className='text-center'>\r\n                No Item\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </>\r\n    );\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await billing.get('most-sold-items', {\r\n        params: {\r\n          from: fromDate,\r\n          to: toDate,\r\n        },\r\n      });\r\n      setItem(response.data.itemsWithCount);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      this.setState({ error: err.response.data.error });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FullLayout>\r\n      <aside key='sidebar'>\r\n        <h1>Most Sold Items Report</h1>\r\n      </aside>\r\n      <main key='main' className='card'>\r\n        <div className='card-body'>\r\n          <Form className='mb-3' onSubmit={handleSubmit}>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for='fromDate'>From</Label>\r\n                  <Input\r\n                    type='date'\r\n                    name='fromDate'\r\n                    id='fromDate'\r\n                    value={fromDate}\r\n                    onChange={(e) =>\r\n                      setFromDate(\r\n                        new Date(e.target.value).toISOString().slice(0, 10)\r\n                      )\r\n                    }\r\n                  />\r\n                </FormGroup>{' '}\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for='toDate'>To</Label>\r\n                  <Input\r\n                    type='date'\r\n                    name='toDate'\r\n                    id='toDate'\r\n                    value={toDate}\r\n                    onChange={(e) =>\r\n                      setToDate(\r\n                        new Date(e.target.value).toISOString().slice(0, 10)\r\n                      )\r\n                    }\r\n                  />\r\n                </FormGroup>{' '}\r\n              </Col>\r\n            </Row>\r\n            <Button>Search</Button>\r\n          </Form>\r\n          <Table bordered striped>\r\n            <thead>\r\n              <tr>\r\n                <th>SNo.</th>\r\n                <th>Item</th>\r\n                <th>Count</th>\r\n              </tr>\r\n            </thead>\r\n            {renderTableBody()}\r\n          </Table>\r\n        </div>\r\n      </main>\r\n    </FullLayout>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport billing from \"../../api/billing\";\r\nimport FullLayout from \"../Layouts/FullLayout\";\r\nimport requireAuth from \"../../helpers/requireAuth\";\r\n\r\nclass SaleProfit extends Component {\r\n  state = {\r\n    sales: [],\r\n    fromDate: new Date().toISOString().slice(0, 10),\r\n    toDate: new Date().toISOString().slice(0, 10),\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true });\r\n    const response = await billing.get(\"cancelled-invoice\");\r\n    this.setState({ sales: response.data.sales, isLoading: false });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: new Date(e.target.value).toISOString().slice(0, 10),\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let { fromDate, toDate } = this.state;\r\n    this.setState({ isLoading: true });\r\n    const response = await billing.get(\"cancelled-invoice\", {\r\n      params: {\r\n        from: fromDate,\r\n        to: toDate,\r\n      },\r\n    });\r\n    this.setState({ sales: response.data.sales, isLoading: false });\r\n  };\r\n\r\n  renderTableBody = () => {\r\n    const { sales, isLoading } = this.state;\r\n    if (isLoading)\r\n      return (\r\n        <Spinner\r\n          color=\"dark\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        />\r\n      );\r\n    return (\r\n      <>\r\n        <tbody>\r\n          {sales.length > 0 ? (\r\n            sales.map((sale, idx) => (\r\n              <tr key={sale.id}>\r\n                <td>{idx + 1}</td>\r\n                <td>\r\n                  <Link to={`/invoice/${sale.id}`}>{\"IN00\" + sale.id}</Link>\r\n                </td>\r\n                <td>{Number(sale.total_amount).toFixed(2)}</td>\r\n                <td>{Number(sale.profit).toFixed(2)}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"5\" className=\"text-center\">\r\n                No Sale\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        {sales.length > 0 ? (\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan=\"2\">Total</th>\r\n              <th>\r\n                {Number(\r\n                  sales.reduce((total, sale) => total + sale.profit, 0)\r\n                ).toFixed(2)}\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { fromDate, toDate } = this.state;\r\n    return (\r\n      <FullLayout>\r\n        <aside key=\"sidebar\">\r\n          <h1>Cancelled Invoice Report</h1>\r\n        </aside>\r\n        <main key=\"main\" className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form className=\"mb-3\" onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"fromDate\">From</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"fromDate\"\r\n                      id=\"fromDate\"\r\n                      value={fromDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{\" \"}\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"toDate\">To</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"toDate\"\r\n                      id=\"toDate\"\r\n                      value={toDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{\" \"}\r\n                </Col>\r\n                <Button hidden>Search</Button>\r\n              </Row>\r\n              <Button>Search</Button>\r\n            </Form>\r\n            <Table bordered striped>\r\n              <thead>\r\n                <tr>\r\n                  <th>SNo.</th>\r\n                  <th>Invoice #</th>\r\n                  <th>Invoice Total</th>\r\n                  <th>Total Profit</th>\r\n                </tr>\r\n              </thead>\r\n              {this.renderTableBody()}\r\n            </Table>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default requireAuth(SaleProfit);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../Invoice/InvoicePdf.module.css\";\r\nimport { showBill } from \"../../actions/index\";\r\n\r\nclass BillPdf extends Component {\r\n  componentDidMount() {\r\n    this.props.showBill(this.props.match.params.id);\r\n  }\r\n\r\n  showDateFromTimeStamp = (dateTime) => {\r\n    return new Date(dateTime).toISOString().slice(0, 10);\r\n  };\r\n\r\n  render() {\r\n    const { purchase } = this.props;\r\n    const { party, items } = purchase;\r\n    console.log(party);\r\n    return (\r\n      <div className=\"w-100\">\r\n        <div className=\"col-12\">\r\n          <Link to=\"/bill\" className=\"non-printable\">\r\n            {`<<`} Go to Create purchase\r\n          </Link>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              {/* <h3 className=\"text-center font-weight-bold mb-1\">\r\n                Incl. of Taxes\r\n              </h3>\r\n              <hr />\r\n              <p className=\"text-center font-weight-bold mb-0\">\r\n                Ardh Sainik Canteen\r\n              </p>\r\n              <p className=\"text-center small font-weight-bold mb-0\">\r\n                Ward No. 1, College Road, Kathua\r\n              </p>\r\n              <p className=\"text-center small font-weight-bold mb-0\">\r\n                GSTIN No.: 01BTIPS1066E1ZZ\r\n              </p> */}\r\n              <div className=\"row pb-2 p-2\">\r\n                <div className=\"col-md-12 sides\">\r\n                  <p className=\"mb-0\">\r\n                    <span\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"inline-block\",\r\n                        textAlign: \"left\",\r\n                      }}\r\n                    >\r\n                      <strong>No.</strong>:{\" \"}\r\n                      <small className=\"small\">BI00{purchase.id}</small>\r\n                    </span>\r\n                    <span\r\n                      style={{\r\n                        width: \"50%\",\r\n                        display: \"inline-block\",\r\n                        textAlign: \"right\",\r\n                      }}\r\n                    >\r\n                      <strong>Date</strong>:{\" \"}\r\n                      <small className=\"small\">\r\n                        {purchase.created_at &&\r\n                          this.showDateFromTimeStamp(purchase.created_at)}\r\n                      </small>\r\n                    </span>\r\n                  </p>\r\n                  <p className=\"mb-0\">\r\n                    <strong>Name</strong>:{\" \"}\r\n                    <small className=\"small\">\r\n                      {party.name}, +91{party.phone}\r\n                    </small>\r\n                  </p>\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-6 sides text-right\">\r\n                  <p className=\"mb-1\">\r\n                    <strong>Date</strong>:{\" \"}\r\n                    <small className=\"small\">{sale.created_at}</small>\r\n                  </p>\r\n                </div> */}\r\n              </div>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-bordered mb-0\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-uppercase small font-weight-bold non-printable\">\r\n                        SNo.\r\n                      </th>\r\n                      <th className=\"text-uppercase small font-weight-bold\">\r\n                        Code\r\n                      </th>\r\n                      <th className=\"text-uppercase small font-weight-bold\">\r\n                        Name\r\n                      </th>\r\n                      <th className=\"text-uppercase small font-weight-bold\">\r\n                        Qty\r\n                      </th>\r\n                      <th className=\"text-uppercase small font-weight-bold\">\r\n                        Unit Cost\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          (Rs)\r\n                        </span>\r\n                      </th>\r\n                      <th className=\"text-uppercase small font-weight-bold\">\r\n                        MRP\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          (Rs)\r\n                        </span>\r\n                      </th>\r\n                      <th className=\"text-uppercase small font-weight-bold\">\r\n                        Sale Price\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          (Rs)\r\n                        </span>\r\n                      </th>\r\n                      <th className=\"text-uppercase small font-weight-bold\">\r\n                        Tax %\r\n                      </th>\r\n                      <th className=\"text-uppercase small font-weight-bold\">\r\n                        Total\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          (Rs)\r\n                        </span>\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {items &&\r\n                      items.map((item, idx) => (\r\n                        <tr key={item.id}>\r\n                          <td className=\"non-printable\">{idx + 1}</td>\r\n                          <td>{item.product_code}</td>\r\n                          <td>{item.product_name}</td>\r\n                          <td>{item.qty}</td>\r\n                          <td>{item.unit_cost}</td>\r\n                          <td>{item.mrp}</td>\r\n                          <td>{item.sale_price}</td>\r\n                          <td>{item.gst}</td>\r\n                          <td>{item.unit_cost * item.qty}</td>\r\n                        </tr>\r\n                      ))}\r\n                  </tbody>\r\n                  <tfoot className=\"font-weight-bold\">\r\n                    <tr>\r\n                      <td className=\"non-printable\"></td>\r\n                      <td colSpan=\"7\">Payment Mode</td>\r\n                      <td className=\"text-uppercase\">\r\n                        {purchase.payment_mode || \"No Payment\"}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className=\"non-printable\"></td>\r\n                      <td colSpan=\"7\">Total Amount</td>\r\n                      <td>{\"Rs \" + purchase.total_amount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className=\"non-printable\"></td>\r\n                      <td colSpan=\"7\">Amount Paid</td>\r\n                      <td className=\"font-weight-bold\">\r\n                        {\"Rs \" + purchase.amount_paid}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className=\"non-printable\"></td>\r\n                      <td colSpan=\"7\">Amount Repay</td>\r\n                      <td className=\"font-weight-bold\">\r\n                        {\"Rs \" + purchase.amount_repay}\r\n                      </td>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n              </div>\r\n              {/* <p className=\"font-weight-bold small mt-3 mb-1\">\r\n                Terms &amp; Conditions\r\n              </p>\r\n              <p className=\"mb-5 mt-0 small\">\r\n                Items once sold. No Refund. No Exchange.\r\n              </p>\r\n              <p className=\"font-weight-bold small mt-3 text-center\">\r\n                Thanks! for supporting\r\n              </p>\r\n              <p className=\"font-weight-bold small mb-0 text-center\">\r\n                Paramilitary Forces nation first for us.\r\n              </p>\r\n              <p className=\"font-weight-bold small mb-0 text-center\">\r\n                Initiative of Ardh Sainik Canteen (Regd.)\r\n              </p>\r\n              <p className=\"font-weight-bold small mb-0 text-center\">\r\n                Phone: +91 7417122363\r\n              </p>\r\n              <p className=\"font-weight-bold small mb-0 text-center\">\r\n                || Jai Hind ||\r\n              </p> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { purchase: state.purchase };\r\n};\r\n\r\nexport default connect(mapStateToProps, { showBill })(BillPdf);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport billing from \"../../api/billing\";\r\nimport FullLayout from \"../Layouts/FullLayout\";\r\nimport requireAuth from \"../../helpers/requireAuth\";\r\n\r\nclass SaleProfit extends Component {\r\n  state = {\r\n    items: [],\r\n    gstPercent: 5,\r\n    fromDate: null,\r\n    toDate: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true });\r\n    const response = await billing.get(\"item-gst\");\r\n    this.setState({ items: response.data.items, isLoading: false });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: new Date(e.target.value).toISOString().slice(0, 10),\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let { fromDate, toDate, gstPercent } = this.state;\r\n    this.setState({ isLoading: true });\r\n    const response = await billing.get(\"item-gst\", {\r\n      params: {\r\n        from: fromDate,\r\n        to: toDate,\r\n        gst: gstPercent,\r\n      },\r\n    });\r\n    this.setState({ items: response.data.items, isLoading: false });\r\n  };\r\n\r\n  handleGstChange = async (e) => {\r\n    e.preventDefault();\r\n    let { fromDate, toDate } = this.state;\r\n    this.setState({ isLoading: true, gstPercent: e.target.value });\r\n\r\n    const response = await billing.get(\"item-gst\", {\r\n      params: {\r\n        from: fromDate,\r\n        to: toDate,\r\n        gst: e.target.value,\r\n      },\r\n    });\r\n    this.setState({\r\n      items: response.data.items,\r\n      isLoading: false,\r\n    });\r\n  };\r\n\r\n  isProfitOrLoss = (sale_price, purchase_price) => {\r\n    if (sale_price - purchase_price > 0) {\r\n      return \"Profit\";\r\n    } else if (sale_price - purchase_price < 0) {\r\n      return \"Loss\";\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  };\r\n\r\n  renderTableBody = () => {\r\n    const { items, isLoading } = this.state;\r\n    if (isLoading)\r\n      return (\r\n        <Spinner\r\n          color=\"dark\"\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        />\r\n      );\r\n    return (\r\n      <>\r\n        <tbody>\r\n          {items.length > 0 ? (\r\n            items.map((item, idx) => (\r\n              <tr key={item.id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{item.product_name}</td>\r\n                <td>{item.qty}</td>\r\n                <td>{Number(item.unit_cost_without_gst).toFixed(2)}</td>\r\n                <td>{Number(item.gst_amount_from_unit_cost).toFixed(2)}</td>\r\n                <td>\r\n                  {Number(item.unit_cost_without_gst * item.qty).toFixed(2)}\r\n                </td>\r\n                <td>\r\n                  {Number(item.gst_amount_from_unit_cost * item.qty).toFixed(2)}\r\n                </td>\r\n                <td>{Number(item.unit_cost * item.qty).toFixed(2)}</td>\r\n                <td>{item.sold_qty}</td>\r\n                <td>{Number(item.sale_price_without_gst).toFixed(2)}</td>\r\n                <td>{Number(item.gst_amount_from_sale_price).toFixed(2)}</td>\r\n                <td>\r\n                  {Number(item.sale_price_without_gst * item.sold_qty).toFixed(\r\n                    2\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {Number(\r\n                    item.gst_amount_from_sale_price * item.sold_qty\r\n                  ).toFixed(2)}\r\n                </td>\r\n                <td>{Number(item.sale_price * item.sold_qty).toFixed(2)}</td>\r\n                <td>\r\n                  {Number(\r\n                    item.sale_price * item.sold_qty - item.unit_cost * item.qty\r\n                  ).toFixed(2)}\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"11\" className=\"text-center\">\r\n                No Item\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        {items.length > 0 ? (\r\n          <tfoot>\r\n            <tr>\r\n              <th colSpan=\"2\">Total</th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce((total, item) => total + item.qty, 0)\r\n                ).toFixed(2)}\r\n              </th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce(\r\n                    (total, item) => total + item.unit_cost_without_gst,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce(\r\n                    (total, item) => total + item.gst_amount_from_unit_cost,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce(\r\n                    (total, item) =>\r\n                      total + item.unit_cost_without_gst * item.qty,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce(\r\n                    (total, item) => total + item.unit_cost * item.qty,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce(\r\n                    (total, item) => total + item.unit_cost * item.qty,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce((total, item) => total + item.sold_qty, 0)\r\n                ).toFixed(2)}\r\n              </th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce(\r\n                    (total, item) => total + item.sale_price_without_gst,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce(\r\n                    (total, item) => total + item.gst_amount_from_sale_price,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce(\r\n                    (total, item) =>\r\n                      total + item.sale_price_without_gst * item.sold_qty,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce(\r\n                    (total, item) =>\r\n                      total + item.gst_amount_from_sale_price * item.sold_qty,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n              <th>\r\n                {Number(\r\n                  items.reduce(\r\n                    (total, item) => total + item.sale_price * item.sold_qty,\r\n                    0\r\n                  )\r\n                ).toFixed(2)}\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { fromDate, toDate, gstPercent } = this.state;\r\n    return (\r\n      <FullLayout>\r\n        <aside key=\"sidebar\">\r\n          <h1>Item GST Report</h1>\r\n        </aside>\r\n        <main key=\"main\" className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form className=\"mb-3\" onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"fromDate\">From</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"fromDate\"\r\n                      id=\"fromDate\"\r\n                      value={fromDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{\" \"}\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"toDate\">To</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"toDate\"\r\n                      id=\"toDate\"\r\n                      value={toDate}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </FormGroup>{\" \"}\r\n                </Col>\r\n                <Button hidden>Search</Button>\r\n              </Row>\r\n              <Button>Search</Button>\r\n            </Form>\r\n            <p style={{ textAlign: \"center\" }}>\r\n              Data showing for <strong>{gstPercent + \"%\"}</strong>{\" \"}\r\n              {fromDate && toDate && (\r\n                <>\r\n                  for dates between <strong>{fromDate}</strong> -{\" \"}\r\n                  <strong>{toDate}</strong>\r\n                </>\r\n              )}\r\n            </p>\r\n            <div className=\"ml-auto col-md-4\">\r\n              <FormGroup>\r\n                <Label for=\"select-gst\">Select GST</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"gst\"\r\n                  id=\"select-gst\"\r\n                  value={gstPercent}\r\n                  onChange={this.handleGstChange}\r\n                >\r\n                  <option>0</option>\r\n                  <option>5</option>\r\n                  <option>12</option>\r\n                  <option>18</option>\r\n                  <option>28</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"table-responsive\">\r\n              <Table bordered striped>\r\n                <thead>\r\n                  <tr>\r\n                    <th>SNo.</th>\r\n                    <th>Item</th>\r\n                    <th>Purchased Qty</th>\r\n                    <th>Unit Cost</th>\r\n                    <th>GST Amount</th>\r\n                    <th>Unit Cost Value</th>\r\n                    <th>GST Value</th>\r\n                    <th>Purchase Value</th>\r\n                    <th>Sold Qty</th>\r\n                    <th>Sale Price</th>\r\n                    <th>Sale GST</th>\r\n                    <th>Sale Price Value</th>\r\n                    <th>GST Value</th>\r\n                    <th>Sale Value</th>\r\n                    <th>Profit/Loss</th>\r\n                  </tr>\r\n                </thead>\r\n                {this.renderTableBody()}\r\n              </Table>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default requireAuth(SaleProfit);\r\n","import React, { Component } from 'react';\r\nimport billing from '../../api/billing';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n  Input,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from 'reactstrap';\r\nimport FullLayout from '../Layouts/FullLayout';\r\nimport { connect } from 'react-redux';\r\nimport requireAuth from '../../helpers/requireAuth';\r\nimport Sidebar from '../Sidebar';\r\n\r\nlet file = null;\r\nclass AddItem extends Component {\r\n  state = {\r\n    product_code: '',\r\n    product_name: '',\r\n    hsn: '',\r\n    image: '',\r\n    brand: '',\r\n    wholesale_percent: '',\r\n    retail_percent: '',\r\n    gst: '',\r\n    message: '',\r\n    loading: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    // console.log(e.target);\r\n    if (e.target.type === 'file') {\r\n      this.setState({\r\n        [e.target.name]: e.target.files[0],\r\n      });\r\n      file = e.target.files[0];\r\n      // console.log(file);\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.setState({\r\n      loading: true,\r\n      message: '',\r\n    });\r\n    const {\r\n      product_code,\r\n      product_name,\r\n      hsn,\r\n      image,\r\n      brand,\r\n      wholesale_percent,\r\n      retail_percent,\r\n      gst,\r\n    } = this.state;\r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    formData.append('product_code', product_code);\r\n    formData.append('product_name', product_name);\r\n    formData.append('hsn', hsn || '');\r\n    formData.append('image', file || '');\r\n    formData.append('brand', brand || '');\r\n    formData.append('wholesale_percent', wholesale_percent);\r\n    formData.append('retail_percent', retail_percent);\r\n    formData.append('gst', gst);\r\n    try {\r\n      await billing.post('add-fix-item', formData, {\r\n        headers: {\r\n          'content-type': 'multipart/form-data',\r\n        },\r\n      });\r\n      this.setState({\r\n        message: 'Item added successfully',\r\n        loading: false,\r\n        retail_percent: '',\r\n        wholesale_percent: '',\r\n        gst: '',\r\n        image: '',\r\n        hsn: '',\r\n        product_name: '',\r\n        product_code: '',\r\n      });\r\n    } catch (err) {\r\n      this.setState({ message: err.response.data.message, loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      product_code,\r\n      product_name,\r\n      hsn,\r\n      brand,\r\n      wholesale_percent,\r\n      retail_percent,\r\n      gst,\r\n      message,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <FullLayout>\r\n        <Sidebar key='side' />\r\n        <main key='main' className='card'>\r\n          <div className='card-body'>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Product Code</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='product_code'\r\n                    value={product_code}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Product Name</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='product_name'\r\n                    value={product_name}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>HSN</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='hsn'\r\n                    value={hsn}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Image</Label>\r\n                  <Input\r\n                    type='file'\r\n                    name='image'\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Brand</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='brand'\r\n                    value={brand}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Wholesale % margin</Label>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type='text'\r\n                      name='wholesale_percent'\r\n                      value={wholesale_percent}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <InputGroupAddon addonType='append'>\r\n                      <InputGroupText>%</InputGroupText>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Retail % margin</Label>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type='text'\r\n                      name='retail_percent'\r\n                      value={retail_percent}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <InputGroupAddon addonType='append'>\r\n                      <InputGroupText>%</InputGroupText>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>GST %</Label>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type='text'\r\n                      name='gst'\r\n                      value={gst}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <InputGroupAddon addonType='append'>\r\n                      <InputGroupText>%</InputGroupText>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Button\r\n              color='success'\r\n              className='mt-3'\r\n              size='sm'\r\n              onClick={this.handleSubmit}\r\n              disabled={loading}\r\n            >\r\n              Add Item\r\n            </Button>\r\n            <span>{message}</span>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null)(requireAuth(AddItem));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport billing from '../../api/billing';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n  Input,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from 'reactstrap';\r\nimport FullLayout from '../Layouts/FullLayout';\r\nimport requireAuth from '../../helpers/requireAuth';\r\nimport Sidebar from '../Sidebar';\r\n\r\nlet file = '';\r\nclass EditItem extends Component {\r\n  state = {\r\n    product_code: '',\r\n    product_name: '',\r\n    hsn: '',\r\n    image: '',\r\n    brand: '',\r\n    wholesale_percent: '',\r\n    retail_percent: '',\r\n    gst: '',\r\n    message: '',\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchItem();\r\n  }\r\n\r\n  fetchItem = async () => {\r\n    const id = this.props.match.params.id;\r\n    try {\r\n      const response = await billing.get(`get-fix-item/${id}`);\r\n      const { item } = response.data;\r\n      this.setState({\r\n        product_code: item.product_code,\r\n        product_name: item.product_name,\r\n        hsn: item.hsn,\r\n        brand: item.brand,\r\n        wholesale_percent: item.ws_margin,\r\n        retail_percent: item.r_margin,\r\n        gst: item.gst,\r\n      });\r\n    } catch (err) {\r\n      // console.log(err);\r\n      this.setState({ message: err.response.data.message });\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    // console.log(e.target);\r\n    if (e.target.type === 'file') {\r\n      this.setState({\r\n        [e.target.name]: e.target.files[0],\r\n      });\r\n      file = e.target.files[0];\r\n      // console.log(file);\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.setState({\r\n      loading: true,\r\n      message: '',\r\n    });\r\n    const {\r\n      product_code,\r\n      product_name,\r\n      hsn,\r\n      image,\r\n      brand,\r\n      wholesale_percent,\r\n      retail_percent,\r\n      gst,\r\n    } = this.state;\r\n    const id = this.props.match.params.id;\r\n    const formData = new FormData();\r\n\r\n    // Update the formData object\r\n    formData.append('product_code', product_code);\r\n    formData.append('product_name', product_name);\r\n    formData.append('hsn', hsn || '');\r\n    formData.append('image', file || '');\r\n    formData.append('brand', brand || '');\r\n    formData.append('wholesale_percent', wholesale_percent);\r\n    formData.append('retail_percent', retail_percent);\r\n    formData.append('gst', gst);\r\n    try {\r\n      await billing.post(`update-fix-item/${id}`, formData, {\r\n        headers: {\r\n          'content-type': 'multipart/form-data',\r\n        },\r\n      });\r\n      this.setState({\r\n        message: 'Item updated successfully',\r\n      });\r\n    } catch (err) {\r\n      this.setState({ message: err.response.data.message });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      product_code,\r\n      product_name,\r\n      hsn,\r\n      brand,\r\n      wholesale_percent,\r\n      retail_percent,\r\n      gst,\r\n      message,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <FullLayout>\r\n        <Sidebar key='side' />\r\n        <main key='main' className='card'>\r\n          <div className='card-body'>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Product Code</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='product_code'\r\n                    value={product_code}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Product Name</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='product_name'\r\n                    value={product_name}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>HSN</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='hsn'\r\n                    value={hsn}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Image</Label>\r\n                  <Input\r\n                    type='file'\r\n                    name='image'\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Brand</Label>\r\n                  <Input\r\n                    type='text'\r\n                    name='brand'\r\n                    value={brand}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Wholesale % margin</Label>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type='text'\r\n                      name='wholesale_percent'\r\n                      value={wholesale_percent}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <InputGroupAddon addonType='append'>\r\n                      <InputGroupText>%</InputGroupText>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>Retail % margin</Label>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type='text'\r\n                      name='retail_percent'\r\n                      value={retail_percent}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <InputGroupAddon addonType='append'>\r\n                      <InputGroupText>%</InputGroupText>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label>GST %</Label>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type='text'\r\n                      name='gst'\r\n                      value={gst}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <InputGroupAddon addonType='append'>\r\n                      <InputGroupText>%</InputGroupText>\r\n                    </InputGroupAddon>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Button\r\n              color='success'\r\n              className='mt-3'\r\n              size='sm'\r\n              onClick={this.handleSubmit}\r\n              disabled={loading}\r\n            >\r\n              Update Item\r\n            </Button>\r\n            <span>{message}</span>\r\n          </div>\r\n        </main>\r\n      </FullLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null)(requireAuth(EditItem));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport billing from '../../api/billing';\r\nimport { Table, Spinner } from 'reactstrap';\r\nimport FullLayout from '../Layouts/FullLayout';\r\n\r\nexport default function ItemList() {\r\n  const [items, setItem] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  useEffect(() => {\r\n    async function cb() {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await billing.get('fix-item');\r\n        setItem(response.data.items);\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    cb();\r\n  }, []);\r\n\r\n  function renderTableBody() {\r\n    if (isLoading)\r\n      return (\r\n        <Spinner\r\n          color='dark'\r\n          style={{ display: 'flex', justifyContent: 'center' }}\r\n        />\r\n      );\r\n    return (\r\n      <>\r\n        <tbody>\r\n          {items.length > 0 ? (\r\n            items.map((item, idx) => (\r\n              <tr key={item.id}>\r\n                <td>{idx + 1}</td>\r\n                <td>\r\n                  {item.full_image_path && (\r\n                    <img\r\n                      className='img-thumbnail'\r\n                      src={item.full_image_path}\r\n                      style={{ width: '20%' }}\r\n                      alt=''\r\n                    />\r\n                  )}\r\n                </td>\r\n                <td>{item.product_code}</td>\r\n                <td>{item.product_name}</td>\r\n                <td>{item.hsn}</td>\r\n                <td>{item.brand}</td>\r\n                <td>{item.ws_margin}</td>\r\n                <td>{item.r_margin}</td>\r\n                <td>{item.gst}</td>\r\n                <th>\r\n                  <Link to={`/edit-item/${item.id}`}>Edit</Link>\r\n                </th>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan='9' className='text-center'>\r\n                No Item\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <FullLayout>\r\n      <aside key='sidebar'>\r\n        <h1>All Items</h1>\r\n      </aside>\r\n      <main key='main' className='card'>\r\n        <div className='card-body'>\r\n          <Table bordered striped>\r\n            <thead>\r\n              <tr>\r\n                <th>SNo.</th>\r\n                <th>Image</th>\r\n                <th>Product Code</th>\r\n                <th>Product Name</th>\r\n                <th>HSN</th>\r\n                <th>Brand</th>\r\n                <th>WS Margin</th>\r\n                <th>R Margin</th>\r\n                <th>GST</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            {renderTableBody()}\r\n          </Table>\r\n        </div>\r\n      </main>\r\n    </FullLayout>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Login from './Authentication/Login';\r\nimport Logout from './Authentication/Logout';\r\nimport CreateInvoice from './Invoice/CreateInvoice';\r\nimport CreateBill from './Bill/CreateBill';\r\nimport InvoicePdf from './Invoice/InvoicePdf';\r\nimport DailyPurchase from './Reports/DailyPurchase';\r\nimport DailySale from './Reports/DailySale';\r\nimport SaleProfit from './Reports/SaleProfit';\r\nimport CustomerList from './Customer/CustomerList';\r\nimport EditCustomer from './Customer/EditCustomer';\r\nimport Expense from './Reports/Expense';\r\nimport StockSummary from './Reports/StockSummary';\r\nimport CustomerInvoices from './Reports/CustomerInvoices';\r\nimport MostSoldItems from './Reports/MostSoldItems';\r\nimport CancelledInvoice from './Reports/CancelledInvoice';\r\nimport BillPdf from './Bill/BillPdf';\r\nimport ItemGST from './Reports/ItemGST';\r\nimport AddItem from './Item/AddItem';\r\nimport EditItem from './Item/EditItem';\r\nimport ItemList from './Item/ItemList';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='/logout' component={Logout} />\r\n          <Route exact path='/' component={CreateInvoice} />\r\n          <Route exact path='/bill' component={CreateBill} />\r\n          <Route exact path='/invoice/:id' component={InvoicePdf} />\r\n          <Route exact path='/bill/:id' component={BillPdf} />\r\n          <Route\r\n            exact\r\n            path='/daily-purchase-report'\r\n            component={DailyPurchase}\r\n          />\r\n          <Route exact path='/daily-sale-report' component={DailySale} />\r\n          <Route exact path='/sale-profit' component={SaleProfit} />\r\n          <Route exact path='/customers' component={CustomerList} />\r\n          <Route exact path='/customer/:phone' component={EditCustomer} />\r\n          <Route exact path='/expense' component={Expense} />\r\n          <Route exact path='/stock-summary' component={StockSummary} />\r\n          <Route exact path='/customers/:id' component={CustomerInvoices} />\r\n          <Route exact path='/most-sold-items' component={MostSoldItems} />\r\n          <Route exact path='/cancelled-invoice' component={CancelledInvoice} />\r\n          <Route exact path='/item-gst' component={ItemGST} />\r\n          <Route exact path='/add-item' component={AddItem} />\r\n          <Route exact path='/edit-item/:id' component={EditItem} />\r\n          <Route exact path='/items' component={ItemList} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport RootReducer from \"./reducers\";\nimport App from \"./components/App\";\n\nconst store = createStore(RootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"InvoicePdf_table__3QFfS\",\"sides\":\"InvoicePdf_sides__3HN4M\",\"non-printable\":\"InvoicePdf_non-printable__216SV\"};"],"sourceRoot":""}